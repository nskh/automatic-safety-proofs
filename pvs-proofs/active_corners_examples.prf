(|active_corners_examples|
 (|right_open_ex1_TCC1| 0
  (|right_open_ex1_TCC1-1| NIL 3962871100 ("" (COND-DISJOINT-TCC) NIL NIL)
   ((|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL
   (|right_open_ex1| DISJOINTNESS
    "COND reals.>=(active_corners_examples.x, 0) -> active_corners_examples.g(active_corners_examples.x), reals.<(active_corners_examples.x, 0) -> active_corners_examples.g(0) ENDCOND"
    "NIL" (13 4 16 25))))
 (|right_open_ex1_TCC2| 0
  (|right_open_ex1_TCC2-1| NIL 3962871100 ("" (COND-COVERAGE-TCC) NIL NIL)
   ((|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL
   (|right_open_ex1| COVERAGE
    "COND reals.>=(active_corners_examples.x, 0) -> active_corners_examples.g(active_corners_examples.x), reals.<(active_corners_examples.x, 0) -> active_corners_examples.g(0) ENDCOND"
    "NIL" (13 4 16 25))))
 (|right_open_ex1_TCC3| 0
  (|right_open_ex1_TCC3-1| NIL 3962871100
   ("" (SKEEP) (("" (LEMMA "right_open_dd") (("" (INST -1 "0") NIL NIL)) NIL))
    NIL)
   ((|right_open_dd| FORMULA-DECL NIL |mean_value_inequalities| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL))
   NIL
   (|right_open_ex1| ASSUMING
    "analysis@derivatives[(mean_value_inequalities.right_open(0))].derivatives"
    "deriv_domain: ASSUMPTION deriv_domain_def[T].deriv_domain?"
    (18 4 18 31))))
 (|right_open_ex1_TCC4| 0
  (|right_open_ex1_TCC4-1| NIL 3962871100
   ("" (SKEEP) (("" (LEMMA "right_open_noe") (("" (INST -1 "0") NIL NIL)) NIL))
    NIL)
   ((|right_open_noe| FORMULA-DECL NIL |mean_value_inequalities| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL))
   NIL
   (|right_open_ex1| ASSUMING
    "analysis@derivatives[(mean_value_inequalities.right_open(0))].derivatives"
    "not_one_element: ASSUMPTION deriv_domain_def[T].not_one_element?"
    (18 4 18 31))))
 (|right_open_ex1| 0
  (|right_open_ex1-1| NIL 3962871238
   ("" (SKEEP*)
    (("" (SKOLETIN*)
      (("" (FLATTEN)
        (("" (SKEEP)
          (("" (CASE "xo-2 >=0")
            (("1" (LEMMA "mvt_gen_ge_ro")
              (("1" (INST -1 "f" "0" "0" "xo+2" "x")
                (("1" (SPLIT -1)
                  (("1" (ASSERT)
                    (("1" (LEMMA "mvt_gen_ge_ro")
                      (("1" (INST -1 "f" "0" "0" "x" "xo-2")
                        (("1" (ASSERT) NIL NIL)
                         ("2" (EXPAND "right_open" 1) (("2" (ASSERT) NIL NIL))
                          NIL)
                         ("3" (EXPAND "right_open" 1) (("3" (ASSERT) NIL NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (PROPAX) NIL NIL) ("3" (PROPAX) NIL NIL)
                   ("4" (PROPAX) NIL NIL))
                  NIL)
                 ("2" (EXPAND "right_open" 1) (("2" (ASSERT) NIL NIL)) NIL)
                 ("3" (EXPAND "right_open" 1) (("3" (ASSERT) NIL NIL)) NIL))
                NIL))
              NIL)
             ("2" (LEMMA "mvt_gen_ge_ro")
              (("2" (INST -1 "f" "0" "0" "xo+2" "x")
                (("1" (SPLIT -1)
                  (("1" (ASSERT)
                    (("1" (LEMMA "mvt_gen_ge_ro")
                      (("1" (INST -1 "f" "0" "0" "x" "0")
                        (("1" (EXPAND "f") (("1" (ASSERT) NIL NIL)) NIL)
                         ("2" (EXPAND "right_open" 1) (("2" (ASSERT) NIL NIL))
                          NIL)
                         ("3" (EXPAND "right_open" 1) (("3" (ASSERT) NIL NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (PROPAX) NIL NIL) ("3" (PROPAX) NIL NIL)
                   ("4" (PROPAX) NIL NIL))
                  NIL)
                 ("2" (EXPAND "right_open" 1) (("2" (ASSERT) NIL NIL)) NIL)
                 ("3" (EXPAND "right_open" 1) (("3" (ASSERT) NIL NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|deriv_fun| TYPE-EQ-DECL NIL |derivatives| |analysis|)
    (|deriv| CONST-DECL "[T -> real]" |derivatives| |analysis|)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (IF CONST-DECL
        "[boolean, T, T -> T]"
        |if_def|
        NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|right_open| CONST-DECL "bool" |mean_value_inequalities| NIL)
    (|deriv_domain?| CONST-DECL "bool" |deriv_domain_def| |analysis|)
    (|not_one_element?| CONST-DECL "bool" |deriv_domain_def| |analysis|)
    (|derivable?| CONST-DECL "bool" |derivatives| |analysis|)
    (|restrict| CONST-DECL "R" |restrict| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (|f| SKOLEM-CONST-DECL "[real -> real]" |active_corners_examples| NIL)
    (|mvt_gen_ge_ro| FORMULA-DECL NIL |mean_value_inequalities| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL)
    (|x| SKOLEM-CONST-DECL "real" |active_corners_examples| NIL)
    (|xo| SKOLEM-CONST-DECL "real" |active_corners_examples| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL))
   SHOSTAK))
 (|left_open_ex1_TCC1| 0
  (|left_open_ex1_TCC1-1| NIL 3962871100 ("" (COND-DISJOINT-TCC) NIL NIL)
   ((|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL
   (|left_open_ex1| DISJOINTNESS
    "COND reals.>(active_corners_examples.x, 0) -> active_corners_examples.g(0), reals.<=(active_corners_examples.x, 0) -> active_corners_examples.g(active_corners_examples.x) ENDCOND"
    "NIL" (45 4 48 25))))
 (|left_open_ex1_TCC2| 0
  (|left_open_ex1_TCC2-1| NIL 3962871100 ("" (COND-COVERAGE-TCC) NIL NIL)
   ((|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL
   (|left_open_ex1| COVERAGE
    "COND reals.>(active_corners_examples.x, 0) -> active_corners_examples.g(0), reals.<=(active_corners_examples.x, 0) -> active_corners_examples.g(active_corners_examples.x) ENDCOND"
    "NIL" (45 4 48 25))))
 (|left_open_ex1_TCC3| 0
  (|left_open_ex1_TCC3-1| NIL 3962871100
   ("" (SKEEP) (("" (LEMMA "left_open_dd") (("" (INST -1 "0") NIL NIL)) NIL))
    NIL)
   ((|left_open_dd| FORMULA-DECL NIL |mean_value_inequalities| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL))
   NIL
   (|left_open_ex1| ASSUMING
    "analysis@derivatives[(mean_value_inequalities.left_open(0))].derivatives"
    "deriv_domain: ASSUMPTION deriv_domain_def[T].deriv_domain?"
    (50 4 50 30))))
 (|left_open_ex1_TCC4| 0
  (|left_open_ex1_TCC4-1| NIL 3962871100
   ("" (SKEEP) (("" (LEMMA "left_open_noe") (("" (INST?) NIL NIL)) NIL)) NIL)
   ((|left_open_noe| FORMULA-DECL NIL |mean_value_inequalities| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL))
   NIL
   (|left_open_ex1| ASSUMING
    "analysis@derivatives[(mean_value_inequalities.left_open(0))].derivatives"
    "not_one_element: ASSUMPTION deriv_domain_def[T].not_one_element?"
    (50 4 50 30))))
 (|left_open_ex1| 0
  (|left_open_ex1-1| NIL 3962871433
   ("" (SKEEP*)
    (("" (SKOLETIN*)
      (("" (FLATTEN)
        (("" (SKEEP)
          (("" (CASE "xo+2 <= 0")
            (("1" (LEMMA "mvt_gen_le_lo")
              (("1" (INST -1 "f" "0" "0" "xo+2" "x")
                (("1" (SPLIT -1)
                  (("1" (ASSERT)
                    (("1" (LEMMA "mvt_gen_le_lo")
                      (("1" (INST -1 "f" "0" "0" "x" "xo-2")
                        (("1" (ASSERT) NIL NIL)
                         ("2" (EXPAND "left_open") (("2" (ASSERT) NIL NIL))
                          NIL)
                         ("3" (EXPAND "left_open") (("3" (ASSERT) NIL NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (PROPAX) NIL NIL) ("3" (PROPAX) NIL NIL)
                   ("4" (PROPAX) NIL NIL))
                  NIL)
                 ("2" (EXPAND "left_open") (("2" (ASSERT) NIL NIL)) NIL)
                 ("3" (EXPAND "left_open") (("3" (ASSERT) NIL NIL)) NIL))
                NIL))
              NIL)
             ("2" (LEMMA "mvt_gen_le_lo")
              (("2" (INST -1 "f" "0" "0" "0" "x")
                (("1" (SPLIT -1)
                  (("1" (ASSERT)
                    (("1" (LEMMA "mvt_gen_le_lo")
                      (("1" (INST -1 "f" "0" "0" "x" "xo-2")
                        (("1" (EXPAND "f")
                          (("1" (SPLIT -1)
                            (("1" (ASSERT) NIL NIL) ("2" (PROPAX) NIL NIL))
                            NIL))
                          NIL)
                         ("2" (EXPAND "left_open") (("2" (ASSERT) NIL NIL))
                          NIL)
                         ("3" (EXPAND "left_open") (("3" (ASSERT) NIL NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (PROPAX) NIL NIL) ("3" (ASSERT) NIL NIL)
                   ("4" (PROPAX) NIL NIL))
                  NIL)
                 ("2" (EXPAND "left_open") (("2" (ASSERT) NIL NIL)) NIL)
                 ("3" (EXPAND "left_open") (("3" (ASSERT) NIL NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|left_open| CONST-DECL "bool" |mean_value_inequalities| NIL)
    (|derivable?| CONST-DECL "bool" |derivatives| |analysis|)
    (|restrict| CONST-DECL "R" |restrict| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|deriv_fun| TYPE-EQ-DECL NIL |derivatives| |analysis|)
    (|deriv| CONST-DECL "[T -> real]" |derivatives| |analysis|)
    (>= CONST-DECL "bool" |reals| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (IF CONST-DECL
        "[boolean, T, T -> T]"
        |if_def|
        NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (|f| SKOLEM-CONST-DECL "[real -> real]" |active_corners_examples| NIL)
    (|mvt_gen_le_lo| FORMULA-DECL NIL |mean_value_inequalities| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL)
    (|x| SKOLEM-CONST-DECL "real" |active_corners_examples| NIL)
    (|xo| SKOLEM-CONST-DECL "real" |active_corners_examples| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL))
   NIL))
 (|full_ex1_TCC1| 0
  (|full_ex1_TCC1-1| NIL 3962874514
   ("" (LEMMA "left_open_dd") (("" (INST -1 "0") NIL NIL)) NIL)
   ((|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|left_open_dd| FORMULA-DECL NIL |mean_value_inequalities| NIL))
   NIL
   (|full_ex1| ASSUMING
    "analysis@derivatives[(mean_value_inequalities.left_open(0))].derivatives"
    "deriv_domain: ASSUMPTION deriv_domain_def[T].deriv_domain?"
    (79 4 79 30))))
 (|full_ex1_TCC2| 0
  (|full_ex1_TCC2-1| NIL 3962874514
   ("" (LEMMA "left_open_noe") (("" (INST -1 "0") NIL NIL)) NIL)
   ((|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|left_open_noe| FORMULA-DECL NIL |mean_value_inequalities| NIL))
   NIL
   (|full_ex1| ASSUMING
    "analysis@derivatives[(mean_value_inequalities.left_open(0))].derivatives"
    "not_one_element: ASSUMPTION deriv_domain_def[T].not_one_element?"
    (79 4 79 30))))
 (|full_ex1_TCC3| 0
  (|full_ex1_TCC3-1| NIL 3962874514
   ("" (SKEEP) (("" (LEMMA "right_open_dd") (("" (INST -1 "0") NIL NIL)) NIL))
    NIL)
   ((|right_open_dd| FORMULA-DECL NIL |mean_value_inequalities| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL))
   NIL
   (|full_ex1| ASSUMING
    "analysis@derivatives[(mean_value_inequalities.right_open(0))].derivatives"
    "deriv_domain: ASSUMPTION deriv_domain_def[T].deriv_domain?"
    (81 4 81 31))))
 (|full_ex1_TCC4| 0
  (|full_ex1_TCC4-1| NIL 3962874514
   ("" (SKEEP) (("" (LEMMA "right_open_noe") (("" (INST -1 "0") NIL NIL)) NIL))
    NIL)
   ((|right_open_noe| FORMULA-DECL NIL |mean_value_inequalities| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL))
   NIL
   (|full_ex1| ASSUMING
    "analysis@derivatives[(mean_value_inequalities.right_open(0))].derivatives"
    "not_one_element: ASSUMPTION deriv_domain_def[T].not_one_element?"
    (81 4 81 31))))
 (|full_ex1| 0
  (|full_ex1-1| NIL 3962874602
   ("" (SKEEP)
    (("" (SKEEP)
      (("" (CASE "x>=0")
        (("1" (LEMMA "right_open_ex1")
          (("1" (INST -1 "xo" "yo" "g")
            (("1" (SKOLETIN *)
              (("1" (ASSERT)
                (("1" (REPLACE -2)
                  (("1" (SPLIT -1)
                    (("1" (ASSERT)
                      (("1" (HIDE -2 -4 -5 -6 -7)
                        (("1" (GRIND) (("1" (POSTPONE) NIL NIL)) NIL)) NIL))
                      NIL)
                     ("2" (POSTPONE) NIL NIL) ("3" (POSTPONE) NIL NIL)
                     ("4" (POSTPONE) NIL NIL) ("5" (POSTPONE) NIL NIL)
                     ("6" (POSTPONE) NIL NIL) ("7" (POSTPONE) NIL NIL)
                     ("8" (POSTPONE) NIL NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL)
         ("2" (POSTPONE) NIL NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK))
 (|closed_interval_ex1_TCC1| 0
  (|closed_interval_ex1_TCC1-1| NIL 3962871100 ("" (COND-DISJOINT-TCC) NIL NIL)
   ((|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL
   (|closed_interval_ex1| DISJOINTNESS
    "COND reals.<(active_corners_examples.x, 0) -> active_corners_examples.g(0), booleans.AND(reals.<=(active_corners_examples.x, 10), reals.>=(active_corners_examples.x, 0)) -> active_corners_examples.g(active_corners_examples.x), reals.>(active_corners_examples.x, 10) -> active_corners_examples.g(10) ENDCOND"
    "NIL" (110 4 114 25))))
 (|closed_interval_ex1_TCC2| 0
  (|closed_interval_ex1_TCC2-1| NIL 3962871100 ("" (COND-COVERAGE-TCC) NIL NIL)
   ((|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL
   (|closed_interval_ex1| COVERAGE
    "COND reals.<(active_corners_examples.x, 0) -> active_corners_examples.g(0), booleans.AND(reals.<=(active_corners_examples.x, 10), reals.>=(active_corners_examples.x, 0)) -> active_corners_examples.g(active_corners_examples.x), reals.>(active_corners_examples.x, 10) -> active_corners_examples.g(10) ENDCOND"
    "NIL" (110 4 114 25))))
 (|closed_interval_ex1_TCC3| 0
  (|closed_interval_ex1_TCC3-1| NIL 3962871100
   ("" (SKEEP)
    (("" (HIDE-ALL-BUT 1)
      (("" (LEMMA "ci_dd")
        (("" (ASSERT) (("" (INST -1 "0" "10") (("" (ASSERT) NIL NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|ci_dd| FORMULA-DECL NIL |mean_value_inequalities| NIL))
   NIL
   (|closed_interval_ex1| ASSUMING
    "analysis@derivatives[(mean_value_inequalities.ci(0, 10))].derivatives"
    "deriv_domain: ASSUMPTION deriv_domain_def[T].deriv_domain?"
    (116 4 116 26))))
 (|closed_interval_ex1_TCC4| 0
  (|closed_interval_ex1_TCC4-1| NIL 3962871100
   ("" (SKEEP)
    (("" (ASSERT)
      (("" (LEMMA "ci_noe")
        (("" (INST -1 "0" "10") (("" (ASSERT) NIL NIL)) NIL)) NIL))
      NIL))
    NIL)
   ((|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|ci_noe| FORMULA-DECL NIL |mean_value_inequalities| NIL))
   NIL
   (|closed_interval_ex1| ASSUMING
    "analysis@derivatives[(mean_value_inequalities.ci(0, 10))].derivatives"
    "not_one_element: ASSUMPTION deriv_domain_def[T].not_one_element?"
    (116 4 116 26))))
 (|closed_interval_ex1| 0
  (|closed_interval_ex1-1| NIL 3962871333
   ("" (SKEEP*)
    (("" (SKOLETIN*)
      (("" (FLATTEN)
        (("" (SKEEP)
          (("" (CASE "xo-2 >=0 AND xo+2 <=10")
            (("1" (FLATTEN)
              (("1" (LEMMA "mvt_gen_ge_ci")
                (("1" (INST -1 "f" "0" "10" "0" "xo+2" "x")
                  (("1" (SPLIT -1)
                    (("1" (ASSERT)
                      (("1" (LEMMA "mvt_gen_ge_ci")
                        (("1" (INST -1 "f" "0" "10" "0" "x" "xo-2")
                          (("1" (ASSERT) NIL NIL)
                           ("2" (EXPAND "ci" 1) (("2" (PROPAX) NIL NIL)) NIL)
                           ("3" (ASSERT)
                            (("3" (EXPAND "ci" 1) (("3" (PROPAX) NIL NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (ASSERT) NIL NIL) ("3" (PROPAX) NIL NIL)
                     ("4" (PROPAX) NIL NIL) ("5" (PROPAX) NIL NIL))
                    NIL)
                   ("2" (EXPAND "ci" 1) (("2" (ASSERT) NIL NIL)) NIL)
                   ("3" (EXPAND "ci" 1) (("3" (ASSERT) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (CASE "xo- 2 < 0 AND xo+2 <= 10")
              (("1" (FLATTEN)
                (("1" (LEMMA "mvt_gen_ge_ci")
                  (("1" (INST -1 "f" "0" "10" "0" "xo+2" "x")
                    (("1" (SPLIT -1)
                      (("1" (ASSERT)
                        (("1" (LEMMA "mvt_gen_ge_ci")
                          (("1" (INST -1 "f" "0" "10" "0" "x" "0")
                            (("1" (EXPAND "f") (("1" (ASSERT) NIL NIL)) NIL)
                             ("2" (EXPAND "ci" 1) (("2" (PROPAX) NIL NIL)) NIL)
                             ("3" (ASSERT)
                              (("3" (EXPAND "ci" 1) (("3" (PROPAX) NIL NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (ASSERT) NIL NIL) ("3" (PROPAX) NIL NIL)
                       ("4" (PROPAX) NIL NIL) ("5" (PROPAX) NIL NIL))
                      NIL)
                     ("2" (EXPAND "ci" 1) (("2" (ASSERT) NIL NIL)) NIL)
                     ("3" (EXPAND "ci" 1) (("3" (ASSERT) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (ASSERT)
                (("2" (CASE "xo - 2 >= 0 AND 2+xo > 10")
                  (("1" (FLATTEN)
                    (("1" (LEMMA "mvt_gen_ge_ci")
                      (("1" (INST -1 "f" "0" "10" "0" "10" "x")
                        (("1" (SPLIT -1)
                          (("1" (LEMMA "mvt_gen_ge_ci")
                            (("1" (INST -1 "f" "0" "10" "0" "x" "xo-2")
                              (("1" (SPLIT -1)
                                (("1" (ASSERT)
                                  (("1" (EXPAND "f") (("1" (ASSERT) NIL NIL))
                                    NIL))
                                  NIL)
                                 ("2" (ASSERT) NIL NIL) ("3" (PROPAX) NIL NIL)
                                 ("4" (ASSERT) NIL NIL) ("5" (PROPAX) NIL NIL))
                                NIL)
                               ("2" (EXPAND "ci" 1) (("2" (ASSERT) NIL NIL))
                                NIL)
                               ("3" (EXPAND "ci" 1) (("3" (PROPAX) NIL NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (ASSERT) NIL NIL) ("3" (PROPAX) NIL NIL)
                           ("4" (ASSERT) NIL NIL) ("5" (PROPAX) NIL NIL))
                          NIL)
                         ("2" (EXPAND "ci" 1) (("2" (PROPAX) NIL NIL)) NIL)
                         ("3" (ASSERT)
                          (("3" (EXPAND "ci" 1) (("3" (PROPAX) NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (ASSERT)
                    (("2" (CASE "xo - 2 < 0 AND 2+xo > 10")
                      (("1" (FLATTEN) (("1" (ASSERT) NIL NIL)) NIL)
                       ("2" (SPLIT 1)
                        (("1" (SPLIT 2)
                          (("1" (ASSERT) NIL NIL)
                           ("2" (SPLIT 4)
                            (("1" (ASSERT) NIL NIL)
                             ("2" (SPLIT 4)
                              (("1" (ASSERT) NIL NIL) ("2" (ASSERT) NIL NIL))
                              NIL))
                            NIL))
                          NIL)
                         ("2" (ASSERT) NIL NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|deriv_fun| TYPE-EQ-DECL NIL |derivatives| |analysis|)
    (|deriv| CONST-DECL "[T -> real]" |derivatives| |analysis|)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (< CONST-DECL "bool" |reals| NIL) (<= CONST-DECL "bool" |reals| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (IF CONST-DECL
        "[boolean, T, T -> T]"
        |if_def|
        NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|ci| CONST-DECL "bool" |mean_value_inequalities| NIL)
    (|deriv_domain?| CONST-DECL "bool" |deriv_domain_def| |analysis|)
    (|not_one_element?| CONST-DECL "bool" |deriv_domain_def| |analysis|)
    (|derivable?| CONST-DECL "bool" |derivatives| |analysis|)
    (|restrict| CONST-DECL "R" |restrict| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (|f| SKOLEM-CONST-DECL "[real -> real]" |active_corners_examples| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|xo| SKOLEM-CONST-DECL "real" |active_corners_examples| NIL)
    (|x| SKOLEM-CONST-DECL "real" |active_corners_examples| NIL)
    (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|mvt_gen_ge_ci| FORMULA-DECL NIL |mean_value_inequalities| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL))
   SHOSTAK)))

