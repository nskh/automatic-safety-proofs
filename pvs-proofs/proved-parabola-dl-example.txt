fly_st_ex3: LEMMA
LET f: [real -> real] =
    LAMBDA (x_1: real):
        COND 
            x_1 < 0 ->  A * 0 ^ 2 / (2 * rv ^ 2),
            ELSE    ->  A * x_1 ^ 2 / (2 * rv ^ 2)
        ENDCOND
    IN
        NOT 
        (
            ((ho - f(ro - 2) - 1 >= 0) AND (ho - f(ro + 2) + 1 <= 0)) OR
            ((ho - f(ro - 2) + 1 >= 0) AND (ho - f(ro + 2) - 1 <= 0)) OR
            ((ho - f(ro + 2) - 1 >= 0) AND (ho - f(ro - 2) + 1 <= 0)) OR
            ((ho - f(ro + 2) + 1 >= 0) AND (ho - f(ro - 2) - 1 <= 0)) OR
            (
                (ro + 2 >= 0) AND
                (ro - 2 <= 0) AND
                (ho - f(0) + 1 >= 0) AND 
                (ho - f(0) - 1 <= 0)
            )
        )
IMPLIES
(
    (
        (: val(r)=cnst(0) AND val(h)=cnst(0) AND val(v)=cnst(0) AND cnst(rv) > cnst(0) AND cnst(A) > 0 :) 
        |-
        ALLRUNS(
            DIFF
            (
                 (:(r, -cnst(rv)), (h, val(v)), (v, cnst(A)):)
            ),
            DLNOT
            ( 
                cnst(ro) + val(r) >= cnst(-2) AND
                cnst(ro) + val(r) <= cnst(2) AND
                -val(h) + cnst(ho) <= cnst(1) AND
                -val(h) + cnst(ho) >= cnst(-1)
            )
        )
    )
)
