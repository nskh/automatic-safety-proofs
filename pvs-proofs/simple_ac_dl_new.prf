(|simple_ac_dl|
 (|fermats_last_TCC1| 0
  (|fermats_last_TCC1-1| NIL 3940667225 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL
   (|fermats_last| SUBTYPE "simple_ac_dl.n"
    "{i: integers.int | booleans.OR(simple_ac_dl.a /= 0, reals.>=(i, 0))}")))
 (|fermats_last| 0
  (|fermats_last-1| NIL 3940667254
   ("" (SKEEP)
    ((""
      (CASE
          "FORALL(rv:real):  mapexpr_inj((: (r, -cnst(rv)), (h, -val(v)), (v, val(a)) :))")
      (("1" (INST -1 "0") (("1" (EVAL-EXPR -1) (("1" (ASSERT) NIL NIL)) NIL))
        NIL)
       ("2" (SKEEP)
        (("2" (HIDE -1 -2)
          (("2" (EXPAND "mapexpr_inj" 1)
            (("2" (SKEEP)
              (("2" (TYPEPRED "i" "j")
                (("2" (EXPAND "length" -1)
                  (("2" (EXPAND "length" -1)
                    (("2" (EXPAND "length" -1)
                      (("2" (EXPAND "length" -1)
                        (("2" (CASE "i=0")
                          (("1" (REPLACE -1)
                            (("1" (EXPAND "nth" -5)
                              (("1" (EXPAND "length" -4)
                                (("1" (EXPAND "length" -4)
                                  (("1" (EXPAND "length" -4)
                                    (("1" (EXPAND "length" -4)
                                      (("1" (CASE "j=1")
                                        (("1" (EXPAND "nth" -6)
                                          (("1" (ASSERT)
                                            (("1" (LEMMA "distinct_vars")
                                              (("1"
                                                (EXPAND
                                                 "pairwise_distinct_vars?" -1)
                                                (("1" (FLATTEN)
                                                  (("1" (HIDE -2)
                                                    (("1"
                                                      (EXPAND "distinct_var?"
                                                              -1)
                                                      (("1" (PROPAX) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL)
                                         ("2" (EXPAND "nth" -5)
                                          (("2" (ASSERT)
                                            (("2" (EXPAND "nth" -5)
                                              (("2" (ASSERT)
                                                (("2" (LEMMA "distinct_vars")
                                                  (("2"
                                                    (EXPAND
                                                     "pairwise_distinct_vars?"
                                                     -1)
                                                    (("2" (FLATTEN)
                                                      (("2"
                                                        (EXPAND "distinct_var?"
                                                                -1)
                                                        (("2" (FLATTEN)
                                                          (("2"
                                                            (EXPAND
                                                             "distinct_var?"
                                                             -1)
                                                            (("2" (PROPAX) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (CASE "i=1")
                            (("1" (REPLACE -1)
                              (("1" (EXPAND "nth" -5)
                                (("1" (EXPAND "nth" -5)
                                  (("1" (ASSERT)
                                    (("1" (EXPAND "nth" -5)
                                      (("1" (EXPAND "length" -4)
                                        (("1" (EXPAND "length" -4)
                                          (("1" (EXPAND "length" -4)
                                            (("1" (EXPAND "length" -4)
                                              (("1" (ASSERT)
                                                (("1" (CASE "NOT j=2")
                                                  (("1" (ASSERT) NIL NIL)
                                                   ("2" (ASSERT)
                                                    (("2"
                                                      (LEMMA "distinct_vars")
                                                      (("2"
                                                        (EXPAND
                                                         "pairwise_distinct_vars?"
                                                         -1)
                                                        (("2" (FLATTEN)
                                                          (("2"
                                                            (EXPAND
                                                             "pairwise_distinct_vars?"
                                                             -2)
                                                            (("2" (HIDE -1)
                                                              (("2" (FLATTEN)
                                                                (("2"
                                                                  (EXPAND
                                                                   "distinct_var?"
                                                                   -1)
                                                                  (("2"
                                                                    (PROPAX)
                                                                    NIL NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL)
                             ("2" (ASSERT)
                              (("2" (CASE "i=2")
                                (("1" (EXPAND "length" -4)
                                  (("1" (EXPAND "length" -4)
                                    (("1" (EXPAND "length" -4)
                                      (("1" (EXPAND "length" -4)
                                        (("1" (ASSERT) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (ASSERT) NIL NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|a| FORMAL-CONST-DECL "dLVar" |simple_ac_dl| NIL)
    (|v| FORMAL-CONST-DECL "dLVar" |simple_ac_dl| NIL)
    (|val| CONST-DECL "real" |hp_def| |dL|)
    (|h| FORMAL-CONST-DECL "dLVar" |simple_ac_dl| NIL)
    (|cnst| CONST-DECL "real" |hp_def| |dL|)
    (|r| FORMAL-CONST-DECL "dLVar" |simple_ac_dl| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|mapexpr_inj| CONST-DECL "bool" |hp_def| |dL|)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|MapExpr| TYPE-EQ-DECL NIL |hp_def| |dL|)
    (|RealExpr| TYPE-EQ-DECL NIL |hp_def| |dL|)
    (|Environment| TYPE-EQ-DECL NIL |hp_def| |dL|)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|dLVar| TYPE-DECL NIL |hp_def| |dL|)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (FALSE CONST-DECL "bool" |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|null_MapExprInj| NAME-JUDGEMENT "MapExprInj" |hp_def| |dL|)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|distinct_vars| FORMULA-DECL NIL |simple_ac_dl| NIL)
    (|distinct_var?| DEF-DECL "{b: bool |
   b =
    FORALL (i: below(length(l))):
      NOT dlvar_index(nth(l, i)) = dlvar_index(v)}"
     |hp_def| |dL|)
    (|pairwise_distinct_vars?| DEF-DECL "{b: bool |
   b =
    FORALL (i, j: below(length(l))):
      i /= j IMPLIES NOT dlvar_index(nth(l, i)) = dlvar_index(nth(l, j))}"
     |hp_def| |dL|)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|odd_plus_even_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL)
    (|plus_u8_u8| APPLICATION-JUDGEMENT "uint16" |integertypes| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|odd_plus_odd_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|subrange| TYPE-EQ-DECL NIL |integers| NIL))
   SHOSTAK))
 (|fly_simp_TCC1| 0
  (|fly_simp_TCC1-1| NIL 3940417486
   ("" (SKEEP)
    (("" (EXPAND "mapexpr_inj" 1)
      (("" (SKEEP)
        (("" (TYPEPRED "i" "j")
          (("" (EXPAND "length" -1)
            (("" (EXPAND "length" -1)
              (("" (EXPAND "length" -1)
                (("" (EXPAND "length" -1)
                  (("" (CASE "i=0")
                    (("1" (REPLACE -1)
                      (("1" (EXPAND "nth" -5)
                        (("1" (EXPAND "length" -4)
                          (("1" (EXPAND "length" -4)
                            (("1" (EXPAND "length" -4)
                              (("1" (EXPAND "length" -4)
                                (("1" (CASE "j=1")
                                  (("1" (EXPAND "nth" -6)
                                    (("1" (ASSERT)
                                      (("1" (LEMMA "distinct_vars")
                                        (("1"
                                          (EXPAND "pairwise_distinct_vars?" -1)
                                          (("1" (FLATTEN)
                                            (("1" (HIDE -2)
                                              (("1" (EXPAND "distinct_var?" -1)
                                                (("1" (PROPAX) NIL NIL)) NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL)
                                   ("2" (EXPAND "nth" -5)
                                    (("2" (ASSERT)
                                      (("2" (EXPAND "nth" -5)
                                        (("2" (ASSERT)
                                          (("2" (LEMMA "distinct_vars")
                                            (("2"
                                              (EXPAND "pairwise_distinct_vars?"
                                                      -1)
                                              (("2" (FLATTEN)
                                                (("2"
                                                  (EXPAND "distinct_var?" -1)
                                                  (("2" (FLATTEN)
                                                    (("2"
                                                      (EXPAND "distinct_var?"
                                                              -1)
                                                      (("2" (PROPAX) NIL NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (CASE "i=1")
                      (("1" (REPLACE -1)
                        (("1" (EXPAND "nth" -5)
                          (("1" (EXPAND "nth" -5)
                            (("1" (ASSERT)
                              (("1" (EXPAND "nth" -5)
                                (("1" (EXPAND "length" -4)
                                  (("1" (EXPAND "length" -4)
                                    (("1" (EXPAND "length" -4)
                                      (("1" (EXPAND "length" -4)
                                        (("1" (ASSERT)
                                          (("1" (CASE "NOT j=2")
                                            (("1" (ASSERT) NIL NIL)
                                             ("2" (ASSERT)
                                              (("2" (LEMMA "distinct_vars")
                                                (("2"
                                                  (EXPAND
                                                   "pairwise_distinct_vars?"
                                                   -1)
                                                  (("2" (FLATTEN)
                                                    (("2"
                                                      (EXPAND
                                                       "pairwise_distinct_vars?"
                                                       -2)
                                                      (("2" (HIDE -1)
                                                        (("2" (FLATTEN)
                                                          (("2"
                                                            (EXPAND
                                                             "distinct_var?"
                                                             -1)
                                                            (("2" (PROPAX) NIL
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (ASSERT)
                        (("2" (CASE "i=2")
                          (("1" (EXPAND "length" -4)
                            (("1" (EXPAND "length" -4)
                              (("1" (EXPAND "length" -4)
                                (("1" (EXPAND "length" -4)
                                  (("1" (ASSERT) NIL NIL)) NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (ASSERT) NIL NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|mapexpr_inj| CONST-DECL "bool" |hp_def| |dL|)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|dLVar| TYPE-DECL NIL |hp_def| |dL|)
    (|Environment| TYPE-EQ-DECL NIL |hp_def| |dL|)
    (|RealExpr| TYPE-EQ-DECL NIL |hp_def| |dL|)
    (|MapExpr| TYPE-EQ-DECL NIL |hp_def| |dL|)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|r| FORMAL-CONST-DECL "dLVar" |simple_ac_dl| NIL)
    (|cnst| CONST-DECL "real" |hp_def| |dL|)
    (|h| FORMAL-CONST-DECL "dLVar" |simple_ac_dl| NIL)
    (|val| CONST-DECL "real" |hp_def| |dL|)
    (|v| FORMAL-CONST-DECL "dLVar" |simple_ac_dl| NIL)
    (|a| FORMAL-CONST-DECL "dLVar" |simple_ac_dl| NIL)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|subrange| TYPE-EQ-DECL NIL |integers| NIL)
    (|nnint_plus_posint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|odd_plus_odd_is_even| APPLICATION-JUDGEMENT "even_int" |integers| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|plus_u8_u8| APPLICATION-JUDGEMENT "uint16" |integertypes| NIL)
    (|odd_plus_even_is_odd| APPLICATION-JUDGEMENT "odd_int" |integers| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|pairwise_distinct_vars?| DEF-DECL "{b: bool |
   b =
    FORALL (i, j: below(length(l))):
      i /= j IMPLIES NOT dlvar_index(nth(l, i)) = dlvar_index(nth(l, j))}"
     |hp_def| |dL|)
    (|distinct_var?| DEF-DECL "{b: bool |
   b =
    FORALL (i: below(length(l))):
      NOT dlvar_index(nth(l, i)) = dlvar_index(v)}"
     |hp_def| |dL|)
    (|distinct_vars| FORMULA-DECL NIL |simple_ac_dl| NIL)
    (|null_MapExprInj| NAME-JUDGEMENT "MapExprInj" |hp_def| |dL|)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL))
   NIL
   (|fly_simp| SUBTYPE
    "(: (simple_ac_dl.r, (real_fun_ops[Environment].-)(hp_def.cnst(simple_ac_dl.rv))), (simple_ac_dl.h, (real_fun_ops[Environment].-)(hp_def.val(simple_ac_dl.v))), (simple_ac_dl.v, hp_def.val(simple_ac_dl.a)) :)"
    "ODEs")))
 (|fly_strt_TCC1| 0
  (|fly_strt_TCC1-1| NIL 3940417486 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL
   (|fly_strt| SUBTYPE
    "(: (simple_ac_dl.r, (real_fun_ops[Environment].-)(hp_def.cnst(simple_ac_dl.rv))), (simple_ac_dl.h, hp_def.cnst(simple_ac_dl.hv)) :)"
    "ODEs")))
 (|fly_strt_sol_TCC1| 0
  (|fly_strt_sol_TCC1-1| NIL 3940665139 ("" (SUBTYPE-TCC) NIL NIL) NIL NIL
   (|fly_strt_sol| SUBTYPE
    "list_adt[[hp_def.dLVar, [Environment -> real]]].cons((simple_ac_dl.r, (real_fun_ops[Environment].+)(hp_def.val(simple_ac_dl.r), real_fun_ops[Environment].*((real_fun_ops[Environment].-)(hp_def.cnst(simple_ac_dl.rv)), hp_def.cnst(simple_ac_dl.s_1)))), list_adt[[hp_def.dLVar, [Environment -> real]]].cons((simple_ac_dl.h, (real_fun_ops[Environment].+)(hp_def.val(simple_ac_dl.h), real_fun_ops[Environment].*(hp_def.cnst(simple_ac_dl.hv), hp_def.cnst(simple_ac_dl.s_1)))), list_adt[[hp_def.dLVar, [Environment -> real]]].null))"
    "Assigns")))
 (|fly_strt_sol| 0
  (|fly_strt_sol-1| NIL 3940417500
   ("" (SKEEP)
    (("" (LABEL "goodseq" -1)
      (("" (HIDE "goodseq")
        (("" (DL-FLATTEN)
          (("" (LEMMA "solution_domain_ax_cnst_imp_zip")
            (("" (INST?)
              (("1" (SKOLETIN)
                (("1" (SKOLETIN)
                  (("1" (ASSERT)
                    (("1" (HIDE 2)
                      (("1" (EXPAND "zs" -2 1)
                        (("1" (EXPAND "init_zip_sol" -2 1)
                          (("1" (EXPAND "length" -2)
                            (("1" (EXPAND "length" -2)
                              (("1" (EXPAND "length" -2)
                                (("1" (ASSERT)
                                  (("1" (EXPAND "nth" -2)
                                    (("1" (EXPAND "nth" -2)
                                      (("1" (EXPAND "init_zip_sol" -2)
                                        (("1" (EXPAND "length" -2)
                                          (("1" (EXPAND "length" -2)
                                            (("1" (EXPAND "length" -2)
                                              (("1" (ASSERT)
                                                (("1" (EXPAND "nth" -2)
                                                  (("1"
                                                    (EXPAND "init_zip_sol" -2)
                                                    (("1" (EXPAND "length" -2)
                                                      (("1"
                                                        (EXPAND "length" -2)
                                                        (("1" (ASSERT)
                                                          (("1"
                                                            (EXPAND "Y_sol_ex"
                                                                    -2 1)
                                                            (("1"
                                                              (EXPAND
                                                               "is_cnst?" -2 1)
                                                              (("1"
                                                                (EXPAND "nth"
                                                                        -2)
                                                                (("1"
                                                                  (EXPAND
                                                                   "cnst" -2 1)
                                                                  (("1"
                                                                    (EXPAND
                                                                     "cnst" -2
                                                                     1)
                                                                    (("1"
                                                                      (EXPAND
                                                                       "env_nat_shift"
                                                                       -2 1)
                                                                      (("1"
                                                                        (EXPAND
                                                                         "env_nat_shift"
                                                                         -2 1)
                                                                        (("1"
                                                                          (ASSERT)
                                                                          (("1"
                                                                            (CASE
                                                                                " (-LAMBDA (env: Environment) -> real: rv)
                      (LAMBDA (i: nat) -> real: i)
                   =
                   (-LAMBDA (env: Environment) -> real: rv)
                       (LAMBDA (i: nat) -> real: 1 + i)")
                                                                            (("1"
                                                                              (ASSERT)
                                                                              (("1"
                                                                                (ASSERT)
                                                                                (("1"
                                                                                  (EXPAND
                                                                                   "-"
                                                                                   -1)
                                                                                  (("1"
                                                                                    (EXPAND
                                                                                     "Y_sol_ex"
                                                                                     -3)
                                                                                    (("1"
                                                                                      (EXPAND
                                                                                       "is_cnst?"
                                                                                       -3
                                                                                       1)
                                                                                      (("1"
                                                                                        (EXPAND
                                                                                         "nth"
                                                                                         -3
                                                                                         1)
                                                                                        (("1"
                                                                                          (EXPAND
                                                                                           "nth"
                                                                                           -3
                                                                                           1)
                                                                                          (("1"
                                                                                            (EXPAND
                                                                                             "nth"
                                                                                             -3
                                                                                             1)
                                                                                            (("1"
                                                                                              (EXPAND
                                                                                               "nth"
                                                                                               -3
                                                                                               1)
                                                                                              (("1"
                                                                                                (EXPAND
                                                                                                 "env_nat_shift"
                                                                                                 -3
                                                                                                 1)
                                                                                                (("1"
                                                                                                  (EXPAND
                                                                                                   "env_nat_shift"
                                                                                                   -3
                                                                                                   1)
                                                                                                  (("1"
                                                                                                    (EXPAND
                                                                                                     "cnst"
                                                                                                     -3
                                                                                                     3)
                                                                                                    (("1"
                                                                                                      (EXPAND
                                                                                                       "cnst"
                                                                                                       -3
                                                                                                       3)
                                                                                                      (("1"
                                                                                                        (EXPAND
                                                                                                         "nth"
                                                                                                         -3)
                                                                                                        (("1"
                                                                                                          (EXPAND
                                                                                                           "nth"
                                                                                                           -3)
                                                                                                          (("1"
                                                                                                            (REPLACE
                                                                                                             -3
                                                                                                             -2)
                                                                                                            (("1"
                                                                                                              (HIDE
                                                                                                               -3)
                                                                                                              (("1"
                                                                                                                (REPLACE
                                                                                                                 -2
                                                                                                                 1)
                                                                                                                (("1"
                                                                                                                  (EXPAND
                                                                                                                   "UPTO"
                                                                                                                   1)
                                                                                                                  (("1"
                                                                                                                    (DL-SKOLEM)
                                                                                                                    (("1"
                                                                                                                      (HIDE
                                                                                                                       -1)
                                                                                                                      (("1"
                                                                                                                        (DL-FLATTEN)
                                                                                                                        (("1"
                                                                                                                          (REVEAL
                                                                                                                           "goodseq")
                                                                                                                          (("1"
                                                                                                                            (INST
                                                                                                                             -1
                                                                                                                             "X!1")
                                                                                                                            NIL
                                                                                                                            NIL))
                                                                                                                          NIL))
                                                                                                                        NIL))
                                                                                                                      NIL))
                                                                                                                    NIL))
                                                                                                                  NIL))
                                                                                                                NIL))
                                                                                                              NIL))
                                                                                                            NIL))
                                                                                                          NIL))
                                                                                                        NIL))
                                                                                                      NIL))
                                                                                                    NIL))
                                                                                                  NIL))
                                                                                                NIL))
                                                                                              NIL))
                                                                                            NIL))
                                                                                          NIL))
                                                                                        NIL))
                                                                                      NIL))
                                                                                    NIL))
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL)
                                                                             ("2"
                                                                              (HIDE
                                                                               -2)
                                                                              (("2"
                                                                                (EXPAND
                                                                                 "-"
                                                                                 1)
                                                                                (("2"
                                                                                  (PROPAX)
                                                                                  NIL
                                                                                  NIL))
                                                                                NIL))
                                                                              NIL))
                                                                            NIL))
                                                                          NIL))
                                                                        NIL))
                                                                      NIL))
                                                                    NIL))
                                                                  NIL))
                                                                NIL))
                                                              NIL))
                                                            NIL))
                                                          NIL))
                                                        NIL))
                                                      NIL))
                                                    NIL))
                                                  NIL))
                                                NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (HIDE 2)
                (("2" (EXPAND "cnst_lins?" 1)
                  (("2" (SKEEP)
                    (("2" (TYPEPRED "i")
                      (("2" (EXPAND "length" -1)
                        (("2" (EXPAND "length" -1)
                          (("2" (EXPAND "length" -1)
                            (("2" (CASE "i=0")
                              (("1" (EXPAND "nth" 1)
                                (("1" (INST 1 "-rv")
                                  (("1" (ASSERT)
                                    (("1" (EXPAND "-" 1)
                                      (("1" (EXPAND "cnst" 1)
                                        (("1" (PROPAX) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL)
                               ("2" (CASE "i=1")
                                (("1" (EXPAND "nth" 2)
                                  (("1" (INST 2 "hv")
                                    (("1" (ASSERT)
                                      (("1" (EXPAND "nth" 2)
                                        (("1" (PROPAX) NIL NIL)) NIL))
                                      NIL))
                                    NIL))
                                  NIL)
                                 ("2" (ASSERT) NIL NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((DIFF ADT-CONSTRUCTOR-DECL "[[ODEs, BoolExpr] -> (diff?)]" |HP_adt| |dL|)
    (|diff?| ADT-RECOGNIZER-DECL "[HP -> boolean]" |HP_adt| |dL|)
    (|ODEs| TYPE-EQ-DECL NIL |hp_def| |dL|)
    (ALLRUNS CONST-DECL "bool" |bool_expr| |dL|)
    (HP TYPE-DECL NIL |HP_adt| |dL|)
    (|Formulas| TYPE-EQ-DECL NIL |bool_expr| |dL|)
    (|dl_impliesR| FORMULA-DECL NIL |dynamic_logic| |dL|)
    (|BoolExpr| TYPE-EQ-DECL NIL |hp_def| |dL|)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|null?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|null| ADT-CONSTRUCTOR-DECL "(null?)" |list_adt| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL)
    (|h| FORMAL-CONST-DECL "dLVar" |simple_ac_dl| NIL)
    (|cnst| CONST-DECL "real" |hp_def| |dL|)
    (|r| FORMAL-CONST-DECL "dLVar" |simple_ac_dl| NIL)
    (|cons| ADT-CONSTRUCTOR-DECL "[[T, list] -> (cons?)]" |list_adt| NIL)
    (|cons?| ADT-RECOGNIZER-DECL "[list -> boolean]" |list_adt| NIL)
    (|mapexpr_inj| CONST-DECL "bool" |hp_def| |dL|)
    (|list| TYPE-DECL NIL |list_adt| NIL)
    (|MapExpr| TYPE-EQ-DECL NIL |hp_def| |dL|)
    (|RealExpr| TYPE-EQ-DECL NIL |hp_def| |dL|)
    (|Environment| TYPE-EQ-DECL NIL |hp_def| |dL|)
    (|nat| NONEMPTY-TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|int| NONEMPTY-TYPE-EQ-DECL NIL |integers| NIL)
    (|integer_pred| CONST-DECL "[rational -> boolean]" |integers| NIL)
    (|rational| NONEMPTY-TYPE-FROM-DECL NIL |rationals| NIL)
    (|rational_pred| CONST-DECL "[real -> boolean]" |rationals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|dLVar| TYPE-DECL NIL |hp_def| |dL|)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|null_MapExprInj| NAME-JUDGEMENT "MapExprInj" |hp_def| |dL|)
    (|cnst_lins?| CONST-DECL "bool" |dl_solution| |dL|)
    (|MapExprInj| TYPE-EQ-DECL NIL |hp_def| |dL|)
    (|init_zip_sol| DEF-DECL "{a: MapExprInj |
   length(a) = length(ode) AND
    FORALL (i: below(length(a))): nth(a, i) = (nth(ode, i)`1, y(i)(t))}"
     |dl_solution| |dL|)
    (|is_cnst?| CONST-DECL "bool" |dl_solution| |dL|)
    (|env_nat_shift| CONST-DECL "real" |dl_solution| |dL|)
    (|dl_andL| FORMULA-DECL NIL |dynamic_logic| |dL|)
    (>= CONST-DECL "BoolExpr" |bool_expr| |dL|)
    (DLAND CONST-DECL "bool" |bool_expr| |dL|)
    (DLIMPLIES CONST-DECL "bool" |bool_expr| |dL|)
    (|dl_forallR| FORMULA-DECL NIL |dynamic_logic| |dL|)
    (|val| CONST-DECL "real" |hp_def| |dL|)
    (|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|posint_plus_nnint_is_posint| APPLICATION-JUDGEMENT "posint" |integers|
     NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|nth| DEF-DECL "T" |list_props| NIL)
    (|assign?| ADT-RECOGNIZER-DECL "[HP -> boolean]" |HP_adt| |dL|)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|\|-| CONST-DECL "bool" |dynamic_logic| |dL|)
    (|QBoolExpr| TYPE-EQ-DECL NIL |hp_def| |dL|)
    (DLFORALL CONST-DECL "bool" |bool_expr| |dL|)
    (QHP TYPE-EQ-DECL NIL |bool_expr| |dL|)
    (UPTO CONST-DECL "BoolExpr" |bool_expr| |dL|)
    (|Assigns| TYPE-EQ-DECL NIL |hp_def| |dL|)
    (ASSIGN ADT-CONSTRUCTOR-DECL "[Assigns -> (assign?)]" |HP_adt| |dL|)
    (|Y_sol_ex| CONST-DECL "[Environment -> real]" |dl_solution| |dL|)
    (|zs| CONST-DECL "MapExprInj" |dl_solution| |dL|)
    (|below| TYPE-EQ-DECL NIL |naturalnumbers| NIL)
    (|length| DEF-DECL "nat" |list_props| NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|int_minus_int_is_int| APPLICATION-JUDGEMENT "int" |integers| NIL)
    (|solution_domain_ax_cnst_imp_zip| FORMULA-DECL NIL |dl_solution| |dL|))
   SHOSTAK))
 (|fly_strt_sol_ac| 0
  (|fly_strt_sol_ac-1| NIL 3940667877
   ("" (SKEEP)
    (("" (SKEEP)
      (("" (EXPAND "wc_rectangle" 1)
        (("" (DL-ASSIGNB)
          (("" (DL-FLATTEN)
            (("" (DL-HIDE -2)
              (("1" (GROUND)
                (("1" (REWRITE "dlSequent_equiv")
                  (("1" (EXPAND "dlSequent" 1)
                    (("1" (SKEEP)
                      (("1" (INST 1 "0")
                        (("1" (EXPAND "nth" 1)
                          (("1" (EXPAND "DLAND" 1)
                            (("1" (EXPAND ">=" 1)
                              (("1" (EXPAND "SUB_Re" 1)
                                (("1" (EXPAND "cnst" 1)
                                  (("1" (EXPAND "-" 1)
                                    (("1" (EXPAND "+" 1)
                                      (("1" (EXPAND "*" 1)
                                        (("1" (EXPAND "val" 1)
                                          (("1" (EXPAND "<=")
                                            (("1"
                                              (CASE
                                                  "NOT dlvar_index(r) = dlvar_index(h)")
                                              (("1" (ASSERT)
                                                (("1" (EXPAND "alplin" 2)
                                                  (("1" (POSTPONE) NIL NIL))
                                                  NIL))
                                                NIL)
                                               ("2" (POSTPONE) NIL NIL))
                                              NIL))
                                            NIL))
                                          NIL))
                                        NIL))
                                      NIL))
                                    NIL))
                                  NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (POSTPONE) NIL NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   NIL SHOSTAK)))

