{
 "finite_start_square_proof.IsSoundAlphaFiniteStart": [
  {
   "info": {
    "theory": "finite_start_square_proof",
    "formula": "IsSoundAlphaFiniteStart",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "718d0343151787c92c9ebf5b0360a0e5f0c3576074be909717c039b5311a517d"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "IsSoundAlphaFiniteStart",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(skeep)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"SoundnessAlphaFiniteStart\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(flatten)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(label \"notch\" 1)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(label \"alphapos\" 2)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(label \"alphaneg\" 3)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(hide (1 2 3))",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(skeep)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(label \"init\" -)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(copy -5)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(copy -5)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(copy -5)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(copy -5)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(copy -5)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(hide init)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(name \"eps\" \"xo - x\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(replace -1)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(assert)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(move-terms -1 l 2)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(move-terms -1 r 1)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(swap-rel -1)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(replace -1 (-5 -6))",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(assert)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(move-terms -5 r 1)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(move-terms -6 r 1)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(move-terms -5 l 1)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(move-terms -6 l 1)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(assert)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(mult-by (-5 -6) \"-1\" -)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(assert)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(swap-rel (-1 -2))",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(assert)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(mult-by (-5 -6) \"alpha\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(case \"NOT (-1 +(alpha * xo) - yo) <= alpha\")",
      "type": "proof-command",
      "rules": [
       {
        "branch": "1",
        "name": "(1)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "1",
          "name": "(assert)",
          "type": "proof-command",
          "rules": []
         }
        ]
       },
       {
        "branch": "2",
        "name": "(2)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "2",
          "name": "(case \"NOT (1 + alpha*xo - yo) >= -alpha\")",
          "type": "proof-command",
          "rules": [
           {
            "branch": "2.1",
            "name": "(2.1)",
            "type": "proof-branch",
            "rules": [
             {
              "branch": "2.1",
              "name": "(assert)",
              "type": "proof-command",
              "rules": []
             }
            ]
           },
           {
            "branch": "2.2",
            "name": "(2.2)",
            "type": "proof-branch",
            "rules": [
             {
              "branch": "2.2",
              "name": "(hide (-5 -6))",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.2",
              "name": "(hide (-3 -4 -5))",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.2",
              "name": "(move-terms -1 r 1)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.2",
              "name": "(move-terms -2 r 1)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.2",
              "name": "(mult-by -2 \"1 + alpha * xo - yo - -alpha\" +)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.2",
              "name": "(hide -2)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.2",
              "name": "(reveal alphapos)",
              "type": "proof-command",
              "rules": []
             },
             {
              "branch": "2.2",
              "name": "(split 1)",
              "type": "proof-command",
              "rules": [
               {
                "branch": "2.2.1",
                "name": "(2.2.1)",
                "type": "proof-branch",
                "rules": [
                 {
                  "branch": "2.2.1",
                  "name": "(reveal notch)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.2.1",
                  "name": "(flip-ineq 2)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.2.1",
                  "name": "(assert)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.2.1",
                  "name": "(reveal init)",
                  "type": "proof-command",
                  "rules": []
                 },
                 {
                  "branch": "2.2.1",
                  "name": "(case \"NOT yo >= -1\")",
                  "type": "proof-command",
                  "rules": [
                   {
                    "branch": "2.2.1.1",
                    "name": "(2.2.1.1)",
                    "type": "proof-branch",
                    "rules": [
                     {
                      "branch": "2.2.1.1",
                      "name": "(move-terms -5 l 2)",
                      "type": "proof-command",
                      "rules": []
                     },
                     {
                      "branch": "2.2.1.1",
                      "name": "(mult-by -8 \"alpha\")",
                      "type": "proof-command",
                      "rules": []
                     },
                     {
                      "branch": "2.2.1.1",
                      "name": "(assert)",
                      "type": "proof-command",
                      "rules": []
                     }
                    ]
                   },
                   {
                    "branch": "2.2.1.2",
                    "name": "(2.2.1.2)",
                    "type": "proof-branch",
                    "rules": [
                     {
                      "branch": "2.2.1.2",
                      "name": "(assert)",
                      "type": "proof-command",
                      "rules": []
                     }
                    ]
                   }
                  ]
                 }
                ]
               },
               {
                "branch": "2.2.2",
                "name": "(2.2.2)",
                "type": "proof-branch",
                "rules": [
                 {
                  "branch": "2.2.2",
                  "name": "(assert)",
                  "type": "proof-command",
                  "rules": []
                 }
                ]
               }
              ]
             }
            ]
           }
          ]
         }
        ]
       }
      ]
     }
    ]
   }
  }
 ],
 "finite_start_square_proof.IsSoundAlphaFiniteStartFiniteEnd": [
  {
   "info": {
    "theory": "finite_start_square_proof",
    "formula": "IsSoundAlphaFiniteStartFiniteEnd",
    "status": "unchecked",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "718d0343151787c92c9ebf5b0360a0e5f0c3576074be909717c039b5311a517d"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "IsSoundAlphaFiniteStartFiniteEnd",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(skeep)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(lemma \"IsSoundAlphaFiniteStart\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(inst -1 \"xo\" \"yo\" \"alpha\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"SoundnessAlphaFiniteStart\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(assert)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"SoundnessAlphaFiniteStartFiniteEnd\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(assert)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(flatten)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(skeep)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(assert)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(split -1)",
      "type": "proof-command",
      "rules": [
       {
        "branch": "1",
        "name": "(1)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "1",
          "name": "(propax)",
          "type": "proof-command",
          "rules": []
         }
        ]
       },
       {
        "branch": "2",
        "name": "(2)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "2",
          "name": "(flatten)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(assert)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(assert)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(move-terms -4 l 2)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(move-terms -6 l 2)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(move-terms -7 l 2)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(mult-by -3 \"alpha\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(assert)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "2",
          "name": "(case \"yo <= xo\")",
          "type": "proof-command",
          "rules": [
           {
            "branch": "2.1",
            "name": "(2.1)",
            "type": "proof-branch",
            "rules": [
             {
              "branch": "2.1",
              "name": "(assert)",
              "type": "proof-command",
              "rules": []
             }
            ]
           }
          ]
         }
        ]
       }
      ]
     }
    ]
   }
  }
 ],
 "finite_start_square_proof.IsSoundAlphaFiniteStartFiniteEndBAD": [
  {
   "info": {
    "theory": "finite_start_square_proof",
    "formula": "IsSoundAlphaFiniteStartFiniteEndBAD",
    "status": "proved",
    "prover": "PVS 7.1.0 (Allegro CL Enterprise Edition)",
    "shasum": "b5d0715ea26ffaeb9b570dd29bcd9a12d48f60c12d92bbc91314de67beca00f8"
   },
   "origin": ".prf",
   "proofTree": {
    "branch": "",
    "name": "IsSoundAlphaFiniteStartFiniteEndBAD",
    "type": "root",
    "rules": [
     {
      "branch": "",
      "name": "(skeep)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(lemma IsSoundAlphaFiniteStart)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(inst -1 \"xo\" \"yo\" \"alpha\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"SoundnessAlphaFiniteStart\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(expand \"SoundnessAlphaFiniteStartFiniteEndBAD\")",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(flatten)",
      "type": "proof-command",
      "rules": []
     },
     {
      "branch": "",
      "name": "(split -1)",
      "type": "proof-command",
      "rules": [
       {
        "branch": "1",
        "name": "(1)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "1",
          "name": "(propax)",
          "type": "proof-command",
          "rules": []
         }
        ]
       },
       {
        "branch": "2",
        "name": "(2)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "2",
          "name": "(propax)",
          "type": "proof-command",
          "rules": []
         }
        ]
       },
       {
        "branch": "3",
        "name": "(3)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "3",
          "name": "(propax)",
          "type": "proof-command",
          "rules": []
         }
        ]
       },
       {
        "branch": "4",
        "name": "(4)",
        "type": "proof-branch",
        "rules": [
         {
          "branch": "4",
          "name": "(assert)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "4",
          "name": "(skeep)",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "4",
          "name": "(inst 1 \"x\")",
          "type": "proof-command",
          "rules": []
         },
         {
          "branch": "4",
          "name": "(assert)",
          "type": "proof-command",
          "rules": []
         }
        ]
       }
      ]
     }
    ]
   }
  }
 ]
}