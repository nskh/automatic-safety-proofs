bound_ex  % [ parameters ]
		: THEORY

  BEGIN

  IMPORTING analysis@top

  mvt_gen_ge: LEMMA
  FORALL(f:[real-> real],c:real):
  (derivable?[real](f) AND
  FORALL(x:real): deriv[real](f)(x) >= c)
  IMPLIES
  FORALL(a,b:real): a>=b IMPLIES
  f(a) - f(b) >= c*(a-b)

%|- mvt_gen_ge : PROOF
%|- (THEN (SKEEP) (SKEEP)
%|-  (SPREAD (CASE "a=b")
%|-   ((ASSERT)
%|-    (SPREAD (LEMMA "mean_value[real]")
%|-     ((THEN (INST -1 "b" "a" "f") (ASSERT) (SKEEP) (INST -5 "c!1")
%|-       (EXPAND "deriv" -5) (ASSERT) (MULT-BY -5 "a-b") (ASSERT))
%|-      (THEN (LEMMA "connected_real") (PROPAX)))))))
%|- QED mvt_gen_ge

  mvt_gen_ge_bound: LEMMA
  FORALL(f:[real-> real],a,b,c:real):
  (derivable?[real](f) AND a>=b AND
  FORALL(x:real | b < x AND x < a): deriv[real](f)(x) >= c)
  IMPLIES
  f(a) - f(b) >= c*(a-b)

%|- mvt_gen_ge_bound : PROOF
%|- (THEN (SKEEP)
%|-  (SPREAD (CASE "a=b")
%|-   ((ASSERT)
%|-    (SPREAD (LEMMA "mean_value[real]")
%|-     ((THEN (INST -1 "b" "a" "f") (ASSERT) (SKEEP)
%|-       (SPREAD (INST -6 "c!1")
%|-        ((THEN (EXPAND "deriv" -6) (ASSERT) (MULT-BY -6 "a-b") (ASSERT))
%|-         (ASSERT))))
%|-      (THEN (LEMMA "connected_real") (PROPAX)))))))
%|- QED mvt_gen_ge_bound

  mvt_gen_ge_bound_left: LEMMA
  FORALL(f:[real-> real],a,b,c:real):
  (derivable?[real](f) AND a>=b AND
  FORALL(x:real | b < x): deriv[real](f)(x) >= c)
  IMPLIES
  f(a) - f(b) >= c*(a-b)

  mvt_gen_le: LEMMA
  FORALL(f:[real-> real],c:real):
  (derivable?[real](f) AND
  FORALL(x:real): deriv[real](f)(x) <= c)
  IMPLIES
  FORALL(a,b:real): a>=b IMPLIES
  f(a) - f(b) <= c*(a-b)

%|- mvt_gen_le : PROOF
%|- (POSTPONE)
%|- QED mvt_gen_le

  bound1_ex: LEMMA
  FORALL(f:[real-> real],x0,y0:real):
  derivable?[real](f) AND
  (FORALL(x:real): deriv[real](f)(x) >= 1) AND
  (EXISTS(x:real): (y0 - f(x) <= x0 - x + 1/2) AND x0 + 1 >= x)
  IMPLIES
  y0 - f(x0+1) + 1/2 <= 0

  bound2_ex: LEMMA
  FORALL(f:[real-> real],x0,y0:real):
  derivable?[real](f) AND
  (FORALL(x:real): deriv[real](f)(x) <= 0) AND
  (EXISTS(x:real): (y0 - f(x) >= -1/2) AND x0 + 1 >= x)
  IMPLIES
  y0 - f(x0+1) + 1/2 >= 0

  bound2_ex_more_premises: LEMMA
  FORALL(f:[real-> real],x0,y0:real):
  derivable?[real](f) AND
  (FORALL(x:real): deriv[real](f)(x) <= 0) AND
  (EXISTS(x:real): (y0 - f(x) >= -1/2) AND (y0 - f(x) <= x0 - x + 1/2) AND (y0 - f(x) <= - x0 + x + 1/2) AND x0 + 1 >= x)
  IMPLIES
  y0 - f(x0+1) + 1/2 >= 0


  bound3_ex_should_fail: LEMMA
  FORALL(f:[real-> real],x0,y0:real):
  derivable?[real](f) AND
  (FORALL(x:real): deriv[real](f)(x) <= 0) AND
  (EXISTS(x:real): (y0 - f(x) >= -1/2) AND x0 + 1 >= x)
  IMPLIES
  y0 - f(x0+1) + 1/2 <= 0

  % below won't work yet since the proof goals are in the form of products
  bound4_ex_full_lemma: LEMMA 
    FORALL(f:[real-> real],xo,yo:real):
    derivable?[real](f) AND
    (FORALL(x:real): deriv[real](f)(x) <= 0) AND
    (EXISTS (x : real) :
    ((yo - f(x) + 1/2 >= 0) AND
     (-x + xo - yo + f(x) + 1/2 >= 0) AND
     (x - xo - yo + f(x) + 1/2 >= 0)))
    IMPLIES
    ((yo - f(xo) - 1/2)*(yo - f(xo - 1) + 1/2) <= 0) OR
    ((yo - f(xo) - 1/2)*(yo - f(xo + 1) + 1/2) <= 0) OR
    ((yo - f(xo - 1) + 1/2)*(yo - f(xo + 1) + 1/2) <= 0)

  % proven
  bound5_ex_full_lemma_new_goal: LEMMA 
    FORALL(f:[real-> real],xo,yo:real):
    derivable?[real](f) AND
    (FORALL(x:real): deriv[real](f)(x) <= 0) AND
    (EXISTS (x : real) :
    ((yo - f(x) + 1/2 >= 0) AND
     (-x + xo - yo + f(x) + 1/2 >= 0) AND
     (x - xo - yo + f(x) + 1/2 >= 0)))
    IMPLIES
    yo - f(xo+1) + 1/2 >= 0

  % added more bounds on the deriv for the top corner, got to needing to show xo >= x
  % interesting progress so that's a good start, need to unpack with Tanner and look at the math more
  bound6_ex_full_lemma_big_goal: LEMMA 
    FORALL(f:[real-> real],xo,yo:real):
    derivable?[real](f) AND
    (FORALL(x:real): deriv[real](f)(x) <= 0) AND
    (FORALL(x:real): deriv[real](f)(x) >= -1) AND    
    (EXISTS (x : real) :
    ((yo - f(x) + 1/2 >= 0) AND
     (-x + xo - yo + f(x) + 1/2 >= 0) AND
     (x - xo - yo + f(x) + 1/2 >= 0)))
    IMPLIES
    yo - f(xo+1) + 1/2 >= 0 AND
    yo - f(xo) - 1/2 <= 0

  % should be easier to prove? can do one branch but not the rest
    bound7_lr_active: LEMMA 
    FORALL(f:[real-> real],xo,yo:real):
    derivable?[real](f) AND
    (FORALL(x:real): deriv[real](f)(x) >= 1) AND
    (FORALL(x:real): deriv[real](f)(x) >= 0) AND
    (EXISTS(x:real): (yo - f(x) >= -1/2) AND (yo - f(x) <= xo - x + 1/2) AND (yo - f(x) <= - xo + x + 1/2) AND xo + 1 >= x AND xo - 1 <= x)
    IMPLIES
    ((yo - f(xo - 1) + 1/2) >= 0 AND
     (yo - f(xo + 1) + 1/2) <= 0) OR
    ((yo - f(xo - 1) + 1/2) <= 0 AND % can cut this second part but was interesting to throw it in
     (yo - f(xo + 1) + 1/2) >= 0)    % since this is technically what our product framing means

  % triangle slope 1 
  bound8_big_lemma: LEMMA
    FORALL(f:[real-> real],xo,yo:real):
    derivable?[real](f) AND
    (FORALL(x:real): deriv[real](f)(x) >= 1) AND
    (FORALL(x:real): deriv[real](f)(x) >= 0) AND
    (EXISTS (x : real) :
     (yo - f(x) + 1/2 >= 0) AND
     (-x + xo - yo + f(x) + 1/2 >= 0) AND
     (x - xo - yo + f(x) + 1/2 >= 0) AND
     xo + 1 >= x AND xo - 1 <= x)
    IMPLIES
    ((yo - f(xo) - 1/2 >= 0) AND
     (yo - f(xo - 1) + 1/2 <= 0)) OR
    ((yo - f(xo) - 1/2 >= 0) AND
     (yo - f(xo + 1) + 1/2 <= 0)) OR
    ((yo - f(xo) - 1/2 <= 0) AND
     (yo - f(xo - 1) + 1/2 >= 0)) OR
    ((yo - f(xo) - 1/2 <= 0) AND
     (yo - f(xo + 1) + 1/2 >= 0)) OR
    ((yo - f(xo - 1) + 1/2 >= 0) AND
     (yo - f(xo + 1) + 1/2 <= 0)) OR
    ((yo - f(xo + 1) + 1/2 >= 0) AND
     (yo - f(xo - 1) + 1/2 <= 0))

  % triangle slope 2 
  bound9_slope_2: LEMMA
    FORALL(f:[real-> real],xo,yo:real):
    derivable?[real](f) AND
    (FORALL(x:real): deriv[real](f)(x) >= 2) AND % TODO let's see we can drop one of these
    (FORALL(x:real): deriv[real](f)(x) >= 0) AND
    (EXISTS (x : real) :
     (yo - f(x) + 1 >= 0) AND
     (-2*x + 2*xo - yo + f(x) + 1 >= 0) AND
     (2*x - 2*xo - yo + f(x) + 1 >= 0) AND
     xo + 1 >= x AND xo - 1 <= x)
    IMPLIES
    ((yo - f(xo) - 1 >= 0) AND
     (yo - f(xo - 1) + 1 <= 0)) OR
    ((yo - f(xo) - 1 >= 0) AND
     (yo - f(xo + 1) + 1 <= 0)) OR
    ((yo - f(xo) - 1 <= 0) AND
     (yo - f(xo - 1) + 1 >= 0)) OR
    ((yo - f(xo) - 1 <= 0) AND
     (yo - f(xo + 1) + 1 >= 0)) OR
    ((yo - f(xo - 1) + 1 >= 0) AND
     (yo - f(xo + 1) + 1 <= 0)) OR
    ((yo - f(xo + 1) + 1 >= 0) AND
     (yo - f(xo - 1) + 1 <= 0))

  bound10_slope_2_less_deriv: LEMMA
    FORALL(f:[real-> real],xo,yo:real):
    derivable?[real](f) AND
    (FORALL(x:real): deriv[real](f)(x) >= 2) AND % OK we could drop the other one
    (EXISTS (x : real) :
     (yo - f(x) + 1 >= 0) AND
     (-2*x + 2*xo - yo + f(x) + 1 >= 0) AND
     (2*x - 2*xo - yo + f(x) + 1 >= 0) AND
     xo + 1 >= x AND xo - 1 <= x)
    IMPLIES
    ((yo - f(xo) - 1 >= 0) AND
     (yo - f(xo - 1) + 1 <= 0)) OR
    ((yo - f(xo) - 1 >= 0) AND
     (yo - f(xo + 1) + 1 <= 0)) OR
    ((yo - f(xo) - 1 <= 0) AND
     (yo - f(xo - 1) + 1 >= 0)) OR
    ((yo - f(xo) - 1 <= 0) AND
     (yo - f(xo + 1) + 1 >= 0)) OR
    ((yo - f(xo - 1) + 1 >= 0) AND
     (yo - f(xo + 1) + 1 <= 0)) OR
    ((yo - f(xo + 1) + 1 >= 0) AND
     (yo - f(xo - 1) + 1 <= 0))

  % proven same as triangle! 
  bound11_rect_function: LEMMA
    FORALL(f:[real-> real],xo,yo:real):
    derivable?[real](f) AND
    (FORALL(x:real): deriv[real](f)(x) >= 0) AND 
    (EXISTS (x : real) :
    ((-x + xo + 2 >= 0) AND
     (-x + xo - 2 <= 0) AND
     (yo - f(x) + 1 >= 0) AND
     (yo - f(x) - 1 <= 0)) AND
    xo + 2 >= x AND xo - 2 <= x) 
    IMPLIES
    ((yo - f(xo - 2) - 1 >= 0) AND
     (yo - f(xo + 2) + 1 <= 0)) OR
    ((yo - f(xo - 2) + 1 >= 0) AND
     (yo - f(xo + 2) - 1 <= 0)) OR
    ((yo - f(xo + 2) - 1 >= 0) AND
     (yo - f(xo - 2) + 1 <= 0)) OR
    ((yo - f(xo + 2) + 1 >= 0) AND
     (yo - f(xo - 2) - 1 <= 0))

  % see if prooflite can handle this?
  bound13_rect_function: LEMMA
    FORALL(f:[real-> real],xo,yo:real):
    derivable?[real](f) AND
    (FORALL(x:real): deriv[real](f)(x) >= 0) AND 
    (EXISTS (x : real) :
    ((-x + xo + 2 >= 0) AND
     (-x + xo - 2 <= 0) AND
     (yo - f(x) + 1 >= 0) AND
     (yo - f(x) - 1 <= 0)) AND
    xo + 2 >= x AND xo - 2 <= x) 
    IMPLIES
    ((yo - f(xo - 2) - 1 >= 0) AND
     (yo - f(xo + 2) + 1 <= 0)) OR
    ((yo - f(xo - 2) + 1 >= 0) AND
     (yo - f(xo + 2) - 1 <= 0)) OR
    ((yo - f(xo + 2) - 1 >= 0) AND
     (yo - f(xo - 2) + 1 <= 0)) OR
    ((yo - f(xo + 2) + 1 >= 0) AND
     (yo - f(xo - 2) - 1 <= 0))

bound14_rect_function_one_goal: LEMMA
    FORALL(f:[real-> real],xo,yo:real):
    derivable?[real](f) AND
    (FORALL(x:real): deriv[real](f)(x) >= 0) AND 
    (EXISTS (x : real) :
    ((-x + xo + 2 >= 0) AND
     (-x + xo - 2 <= 0) AND
     (yo - f(x) + 1 >= 0) AND
     (yo - f(x) - 1 <= 0)) AND
    xo + 2 >= x AND xo - 2 <= x) 
    IMPLIES
 %   ((yo - f(xo - 2) - 1 >= 0) AND
 %   (yo - f(xo + 2) + 1 <= 0)) OR
    % this is the correct goal
    ((yo - f(xo - 2) + 1 >= 0) AND
     (yo - f(xo + 2) - 1 <= 0))
%    ((yo - f(xo + 2) - 1 >= 0) AND
%     (yo - f(xo - 2) + 1 <= 0)) OR
%    ((yo - f(xo + 2) + 1 >= 0) AND
%     (yo - f(xo - 2) - 1 <= 0))

bound14_rect_function_wrong_goal: LEMMA
    FORALL(f:[real-> real],xo,yo:real):
    derivable?[real](f) AND
    (FORALL(x:real): deriv[real](f)(x) >= 0) AND 
    (EXISTS (x : real) :
    ((-x + xo + 2 >= 0) AND
     (-x + xo - 2 <= 0) AND
     (yo - f(x) + 1 >= 0) AND
     (yo - f(x) - 1 <= 0)) AND
    xo + 2 >= x AND xo - 2 <= x) 
    IMPLIES
    % cannot prove either branch of this conjunction with strategy above
    ((yo - f(xo - 2) - 1 >= 0) AND
    (yo - f(xo + 2) + 1 <= 0))
    % this is the correct goal
%    ((yo - f(xo - 2) + 1 >= 0) AND
%     (yo - f(xo + 2) - 1 <= 0))
%    ((yo - f(xo + 2) - 1 >= 0) AND
%     (yo - f(xo - 2) + 1 <= 0)) OR
%    ((yo - f(xo + 2) + 1 >= 0) AND
%     (yo - f(xo - 2) - 1 <= 0))


  % add a bound x >= 0 to domain, see how to handle this?
  bound14_rect_function_bounded: LEMMA
    FORALL(f:[real-> real],xo,yo:real):
    derivable?[real](f) AND
    (FORALL(x:real): x >= 0 IMPLIES deriv[real](f)(x) >= 0) AND 
    (EXISTS (x : real) :
     x >= 0 AND
    ((-x + xo + 2 >= 0) AND
     (-x + xo - 2 <= 0) AND
     (yo - f(x) + 1 >= 0) AND
     (yo - f(x) - 1 <= 0)) AND
    xo + 2 >= x AND xo - 2 <= x) AND
    % notch case here at (0, 0): transition point for, say y = x^2 
    ((xo + 2 >= 0) AND
     ( xo - 2 <= 0) AND
     (yo + 1 >= 0) AND
     (yo - 1 <= 0)) 
    IMPLIES
    ((yo - f(xo - 2) - 1 >= 0) AND
     (yo - f(xo + 2) + 1 <= 0)) OR
    ((yo - f(xo - 2) + 1 >= 0) AND
     (yo - f(xo + 2) - 1 <= 0)) OR
    ((yo - f(xo + 2) - 1 >= 0) AND
     (yo - f(xo - 2) + 1 <= 0)) OR
    ((yo - f(xo + 2) + 1 >= 0) AND
     (yo - f(xo - 2) - 1 <= 0))  



%|- bound11_rect_function : PROOF
%|- (THEN (SKEEP*) (LEMMA "mvt_gen_ge") (INST?) (ASSERT)
%|-  (SPREAD (SPLIT -1)
%|-   ((THEN (ASSERT) (INST -1 "xo + 2" "x") (ASSERT) (LEMMA "mvt_gen_ge") (INST?)
%|-     (ASSERT)
%|-     (SPREAD (SPLIT -1) ((THEN (INST -1 "x" "xo - 2") (ASSERT)) (PROPAX))))
%|-    (PROPAX))))
%|- QED bound11_rect_function

%|- bound13_rect_function : PROOF
%|- (THEN
%|-  (SKEEP*)
%|-  (LEMMA "mvt_gen_ge")
%|-  (INST?)
%|-  (ASSERT)
%|-  (SPREAD
%|-      (SPLIT -1)
%|-      ((THEN
%|-          (ASSERT)
%|-          (INST -1 "xo + 2" "x")
%|-          (ASSERT)
%|-          (LEMMA "mvt_gen_ge")
%|-          (INST?)
%|-          (ASSERT)
%|-          (SPREAD
%|-              (SPLIT -1)
%|-              ((THEN
%|-                  (INST -1 "x" "xo - 2")
%|-                  (ASSERT)) (PROPAX)))) (PROPAX))))
%|- QED bound13_rect_function


END bound_ex
