(|prooflite_examples_two|
 (|left_open_connected| 0
  (|left_open_connected-1| NIL 3963962537
   (""
    (THEN (SKEEP) (EXPAND "connected?") (SKEEP) (TYPEPRED "x" "y")
     (EXPAND "left_open") (ASSERT))
    NIL NIL)
   ((|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|left_open| CONST-DECL "bool" |prooflite_examples_two| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|connected?| CONST-DECL "bool" |deriv_domain_def| |analysis|))
   SHOSTAK))
 (|left_open_noe| 0
  (|left_open_noe-1| NIL 3963962537
   ("" (SKEEP)
    (("" (EXPAND "not_one_element?")
      (("" (SKEEP)
        (("" (INST 1 "x-1")
          (("1" (ASSERT) NIL NIL)
           ("2" (TYPEPRED "x")
            (("2" (EXPAND "left_open") (("2" (ASSERT) NIL NIL)) NIL)) NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|not_one_element?| CONST-DECL "bool" |deriv_domain_def| |analysis|)
    (|x| SKOLEM-CONST-DECL "(left_open(c))" |prooflite_examples_two| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|c| SKOLEM-CONST-DECL "real" |prooflite_examples_two| NIL)
    (|left_open| CONST-DECL "bool" |prooflite_examples_two| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL))
   SHOSTAK))
 (|left_open_dd| 0
  (|left_open_dd-1| NIL 3963962537
   (""
    (THEN (SKEEP) (LEMMA "connected_deriv_domain[(left_open(c))]") (ASSERT)
     (HIDE 2) (LEMMA " left_open_connected") (LEMMA " left_open_noe") (INST?)
     (INST?) (ASSERT))
    NIL NIL)
   ((|left_open_connected| FORMULA-DECL NIL |prooflite_examples_two| NIL)
    (|left_open_noe| FORMULA-DECL NIL |prooflite_examples_two| NIL)
    (|connected_deriv_domain| FORMULA-DECL NIL |deriv_domain_def| |analysis|)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|left_open| CONST-DECL "bool" |prooflite_examples_two| NIL))
   SHOSTAK))
 (|right_open_connected| 0
  (|right_open_connected-1| NIL 3963962537
   (""
    (THEN (SKEEP) (EXPAND "connected?") (SKEEP) (TYPEPRED "x" "y")
     (EXPAND "right_open") (ASSERT))
    NIL NIL)
   ((|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|right_open| CONST-DECL "bool" |prooflite_examples_two| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|connected?| CONST-DECL "bool" |deriv_domain_def| |analysis|))
   SHOSTAK))
 (|right_open_noe| 0
  (|right_open_noe-1| NIL 3963962537
   ("" (SKEEP)
    (("" (EXPAND "not_one_element?")
      (("" (SKEEP)
        (("" (INST 1 "x+1")
          (("1" (ASSERT) NIL NIL)
           ("2" (TYPEPRED "x")
            (("2" (ASSERT)
              (("2" (EXPAND "right_open") (("2" (ASSERT) NIL NIL)) NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|not_one_element?| CONST-DECL "bool" |deriv_domain_def| |analysis|)
    (|x| SKOLEM-CONST-DECL "(right_open(c))" |prooflite_examples_two| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|c| SKOLEM-CONST-DECL "real" |prooflite_examples_two| NIL)
    (|right_open| CONST-DECL "bool" |prooflite_examples_two| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL))
   SHOSTAK))
 (|right_open_dd| 0
  (|right_open_dd-1| NIL 3963962537
   (""
    (THEN (SKEEP) (LEMMA "connected_deriv_domain[(right_open(c))]") (ASSERT)
     (HIDE 2) (LEMMA " right_open_connected") (LEMMA " right_open_noe") (INST?)
     (INST?) (ASSERT))
    NIL NIL)
   ((|right_open_connected| FORMULA-DECL NIL |prooflite_examples_two| NIL)
    (|right_open_noe| FORMULA-DECL NIL |prooflite_examples_two| NIL)
    (|connected_deriv_domain| FORMULA-DECL NIL |deriv_domain_def| |analysis|)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|right_open| CONST-DECL "bool" |prooflite_examples_two| NIL))
   SHOSTAK))
 (|ci_noe| 0
  (|ci_noe-1| NIL 3963962537
   ("" (SKEEP)
    (("" (EXPAND "not_one_element?")
      (("" (SKEEP)
        (("" (TYPEPRED "x")
          (("" (INST-CP 2 "d1")
            (("1" (INST 2 "d2")
              (("1" (ASSERT) NIL NIL)
               ("2" (EXPAND "ci") (("2" (ASSERT) NIL NIL)) NIL))
              NIL)
             ("2" (EXPAND "ci")
              (("2" (ASSERT) (("2" (FLATTEN) (("2" (ASSERT) NIL NIL)) NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|not_one_element?| CONST-DECL "bool" |deriv_domain_def| |analysis|)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|ci| CONST-DECL "bool" |prooflite_examples_two| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|d1| SKOLEM-CONST-DECL "real" |prooflite_examples_two| NIL)
    (|d2| SKOLEM-CONST-DECL "real" |prooflite_examples_two| NIL))
   SHOSTAK))
 (|ci_connected| 0
  (|ci_connected-1| NIL 3963962537
   (""
    (THEN (SKEEP) (EXPAND "connected?" 2) (SKEEP) (TYPEPRED "x" "y" "z")
     (EXPAND "ci") (ASSERT) (FLATTEN) (ASSERT))
    NIL NIL)
   ((|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|ci| CONST-DECL "bool" |prooflite_examples_two| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|connected?| CONST-DECL "bool" |deriv_domain_def| |analysis|))
   SHOSTAK))
 (|ci_dd| 0
  (|ci_dd-1| NIL 3963962537
   (""
    (THEN (SKEEP) (LEMMA "connected_deriv_domain[(ci(d1,d2))]") (ASSERT)
     (HIDE 2) (LEMMA " ci_connected") (LEMMA " ci_noe") (TYPEPRED "d1" "d2")
     (REVEAL +) (INST -3 "d1" "d2") (INST -4 "d1" "d2") (ASSERT))
    NIL NIL)
   ((|ci_connected| FORMULA-DECL NIL |prooflite_examples_two| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|ci_noe| FORMULA-DECL NIL |prooflite_examples_two| NIL)
    (|connected_deriv_domain| FORMULA-DECL NIL |deriv_domain_def| |analysis|)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|ci| CONST-DECL "bool" |prooflite_examples_two| NIL))
   SHOSTAK))
 (|mvt_gen_ge_TCC1| 0
  (|mvt_gen_ge_TCC1-1| NIL 3963962302
   ("" (SKEEP)
    (("" (LEMMA "connected_deriv_domain[(D)]") (("" (ASSERT) NIL NIL)) NIL))
    NIL)
   ((|not_one_element?| CONST-DECL "bool" |deriv_domain_def| |analysis|)
    (|connected?| CONST-DECL "bool" |deriv_domain_def| |analysis|)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|connected_deriv_domain| FORMULA-DECL NIL |deriv_domain_def| |analysis|))
   NIL
   (|mvt_gen_ge| ASSUMING
    "analysis@derivatives[(prooflite_examples_two.D)].derivatives"
    "deriv_domain: ASSUMPTION deriv_domain_def[T].deriv_domain?"
    (93 3 93 18))))
 (|mvt_gen_ge_TCC2| 0
  (|mvt_gen_ge_TCC2-1| NIL 3963962302
   ("" (EXPAND "right_open")
    (("" (EXPAND "ci")
      (("" (EXPAND "left_open")
        (("" (EXPAND "f") (("" (ASSERT) (("" (GRIND) NIL))))))))))
    NIL)
   NIL NIL
   (|mvt_gen_ge| ASSUMING
    "analysis@derivatives[(prooflite_examples_two.D)].derivatives"
    "not_one_element: ASSUMPTION deriv_domain_def[T].not_one_element?"
    (93 3 93 18))))
 (|mvt_gen_ge| 0
  (|mvt_gen_ge-1| NIL 3963962537
   ("" (SKEEP)
    (("" (CASE "a=b")
      (("1" (ASSERT) NIL NIL)
       ("2" (LEMMA "mean_value[(D)]")
        (("2" (INST -1 "b" "a" "f")
          (("2" (ASSERT)
            (("2" (SKEEP)
              (("2" (INST -6 "c!1")
                (("2" (EXPAND "deriv" -6)
                  (("2" (ASSERT)
                    (("2" (MULT-BY -6 "a-b")
                      (("2" (ASSERT)
                        (("2" (EXPAND "restrict") (("2" (ASSERT) NIL NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|not_one_element?| CONST-DECL "bool" |deriv_domain_def| |analysis|)
    (|connected?| CONST-DECL "bool" |deriv_domain_def| |analysis|)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|restrict| CONST-DECL "R" |restrict| NIL)
    (|deriv| CONST-DECL "[T -> real]" |derivatives| |analysis|)
    (|deriv| CONST-DECL "real" |derivatives_def| |analysis|)
    (|derivable?| CONST-DECL "bool" |derivatives_def| |analysis|)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|both_sides_times_pos_ge1_imp| FORMULA-DECL NIL |extra_real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|mean_value| FORMULA-DECL NIL |derivative_props| |analysis|))
   SHOSTAK))
 (|mvt_gen_le| 0
  (|mvt_gen_le-1| NIL 3963962537
   ("" (SKEEP)
    (("" (CASE "a=b")
      (("1" (ASSERT) NIL NIL)
       ("2" (LEMMA "mean_value[(D)]")
        (("2" (INST -1 "b" "a" "f")
          (("2" (ASSERT)
            (("2" (SKEEP)
              (("2" (INST -6 "c!1")
                (("2" (EXPAND "deriv" -6)
                  (("2" (ASSERT)
                    (("2" (MULT-BY -6 "a-b")
                      (("2" (ASSERT)
                        (("2" (EXPAND "restrict") (("2" (ASSERT) NIL NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|not_one_element?| CONST-DECL "bool" |deriv_domain_def| |analysis|)
    (|connected?| CONST-DECL "bool" |deriv_domain_def| |analysis|)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|restrict| CONST-DECL "R" |restrict| NIL)
    (|deriv| CONST-DECL "[T -> real]" |derivatives| |analysis|)
    (|deriv| CONST-DECL "real" |derivatives_def| |analysis|)
    (|derivable?| CONST-DECL "bool" |derivatives_def| |analysis|)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (|nonneg_real| NONEMPTY-TYPE-EQ-DECL NIL |real_types| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|both_sides_times_pos_le1_imp| FORMULA-DECL NIL |extra_real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|mean_value| FORMULA-DECL NIL |derivative_props| |analysis|))
   SHOSTAK))
 (|mvt_gen_ge_lo_TCC1| 0
  (|mvt_gen_ge_lo_TCC1-1| NIL 3963962302
   ("" (LEMMA "left_open_dd") (("" (SKEEP) (("" (INST -1 "C") NIL NIL)) NIL))
    NIL)
   ((|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|left_open_dd| FORMULA-DECL NIL |prooflite_examples_two| NIL))
   NIL
   (|mvt_gen_ge_lo| ASSUMING
    "analysis@derivatives[(prooflite_examples_two.left_open(prooflite_examples_two.C))].derivatives"
    "deriv_domain: ASSUMPTION deriv_domain_def[T].deriv_domain?"
    (126 3 126 29))))
 (|mvt_gen_ge_lo_TCC2| 0
  (|mvt_gen_ge_lo_TCC2-1| NIL 3963962302
   ("" (SKEEP) (("" (LEMMA "left_open_noe") (("" (INST -1 "C") NIL NIL)) NIL))
    NIL)
   ((|left_open_noe| FORMULA-DECL NIL |prooflite_examples_two| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL))
   NIL
   (|mvt_gen_ge_lo| ASSUMING
    "analysis@derivatives[(prooflite_examples_two.left_open(prooflite_examples_two.C))].derivatives"
    "not_one_element: ASSUMPTION deriv_domain_def[T].not_one_element?"
    (126 3 126 29))))
 (|mvt_gen_ge_lo| 0
  (|mvt_gen_ge_lo-1| NIL 3963962537
   ("" (LEMMA "mvt_gen_ge")
    (("" (SKEEP)
      (("" (INST -1 "f" "left_open(C)" "c" "a" "b")
        (("1" (ASSERT) NIL NIL)
         ("2" (LEMMA "left_open_noe")
          (("2" (LEMMA " left_open_connected")
            (("2" (INST -1 "C")
              (("2" (INST -2 "C") (("2" (ASSERT) NIL NIL)) NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|left_open_noe| FORMULA-DECL NIL |prooflite_examples_two| NIL)
    (|left_open_connected| FORMULA-DECL NIL |prooflite_examples_two| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|left_open| CONST-DECL "bool" |prooflite_examples_two| NIL)
    (C SKOLEM-CONST-DECL "real" |prooflite_examples_two| NIL)
    (|connected?| CONST-DECL "bool" |deriv_domain_def| |analysis|)
    (|not_one_element?| CONST-DECL "bool" |deriv_domain_def| |analysis|)
    (|mvt_gen_ge| FORMULA-DECL NIL |prooflite_examples_two| NIL))
   SHOSTAK))
 (|mvt_gen_le_lo| 0
  (|mvt_gen_le_lo-1| NIL 3963962537
   ("" (LEMMA "mvt_gen_le")
    (("" (SKEEP)
      (("" (INST -1 "f" "left_open(C)" "c" "a" "b")
        (("1" (ASSERT) NIL NIL)
         ("2" (LEMMA "left_open_noe")
          (("2" (LEMMA " left_open_connected")
            (("2" (INST -1 "C")
              (("2" (INST -2 "C") (("2" (ASSERT) NIL NIL)) NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|left_open_noe| FORMULA-DECL NIL |prooflite_examples_two| NIL)
    (|left_open_connected| FORMULA-DECL NIL |prooflite_examples_two| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|left_open| CONST-DECL "bool" |prooflite_examples_two| NIL)
    (C SKOLEM-CONST-DECL "real" |prooflite_examples_two| NIL)
    (|connected?| CONST-DECL "bool" |deriv_domain_def| |analysis|)
    (|not_one_element?| CONST-DECL "bool" |deriv_domain_def| |analysis|)
    (|mvt_gen_le| FORMULA-DECL NIL |prooflite_examples_two| NIL))
   SHOSTAK))
 (|mvt_gen_ge_ro_TCC1| 0
  (|mvt_gen_ge_ro_TCC1-1| NIL 3963962302
   ("" (SKEEP) (("" (LEMMA "right_open_dd") (("" (INST -1 "C") NIL NIL)) NIL))
    NIL)
   ((|right_open_dd| FORMULA-DECL NIL |prooflite_examples_two| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL))
   NIL
   (|mvt_gen_ge_ro| ASSUMING
    "analysis@derivatives[(prooflite_examples_two.right_open(prooflite_examples_two.C))].derivatives"
    "deriv_domain: ASSUMPTION deriv_domain_def[T].deriv_domain?"
    (157 3 157 30))))
 (|mvt_gen_ge_ro_TCC2| 0
  (|mvt_gen_ge_ro_TCC2-1| NIL 3963962302
   ("" (SKEEP) (("" (LEMMA "right_open_noe") (("" (INST -1 "C") NIL NIL)) NIL))
    NIL)
   ((|right_open_noe| FORMULA-DECL NIL |prooflite_examples_two| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL))
   NIL
   (|mvt_gen_ge_ro| ASSUMING
    "analysis@derivatives[(prooflite_examples_two.right_open(prooflite_examples_two.C))].derivatives"
    "not_one_element: ASSUMPTION deriv_domain_def[T].not_one_element?"
    (157 3 157 30))))
 (|mvt_gen_ge_ro| 0
  (|mvt_gen_ge_ro-1| NIL 3963962537
   ("" (LEMMA "mvt_gen_ge")
    (("" (SKEEP)
      (("" (INST -1 "f" "right_open(C)" "c" "a" "b")
        (("1" (ASSERT) NIL NIL)
         ("2" (LEMMA "right_open_noe")
          (("2" (LEMMA "right_open_connected")
            (("2" (INST -1 "C")
              (("2" (INST -2 "C") (("2" (ASSERT) NIL NIL)) NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|right_open_noe| FORMULA-DECL NIL |prooflite_examples_two| NIL)
    (|right_open_connected| FORMULA-DECL NIL |prooflite_examples_two| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|right_open| CONST-DECL "bool" |prooflite_examples_two| NIL)
    (C SKOLEM-CONST-DECL "real" |prooflite_examples_two| NIL)
    (|connected?| CONST-DECL "bool" |deriv_domain_def| |analysis|)
    (|not_one_element?| CONST-DECL "bool" |deriv_domain_def| |analysis|)
    (|mvt_gen_ge| FORMULA-DECL NIL |prooflite_examples_two| NIL))
   SHOSTAK))
 (|mvt_gen_le_ro| 0
  (|mvt_gen_le_ro-1| NIL 3963962537
   ("" (LEMMA "mvt_gen_le")
    (("" (SKEEP)
      (("" (INST -1 "f" "right_open(C)" "c" "a" "b")
        (("1" (ASSERT) NIL NIL)
         ("2" (LEMMA "right_open_noe")
          (("2" (LEMMA "right_open_connected")
            (("2" (INST -1 "C")
              (("2" (INST -2 "C") (("2" (ASSERT) NIL NIL)) NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|right_open_noe| FORMULA-DECL NIL |prooflite_examples_two| NIL)
    (|right_open_connected| FORMULA-DECL NIL |prooflite_examples_two| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|right_open| CONST-DECL "bool" |prooflite_examples_two| NIL)
    (C SKOLEM-CONST-DECL "real" |prooflite_examples_two| NIL)
    (|connected?| CONST-DECL "bool" |deriv_domain_def| |analysis|)
    (|not_one_element?| CONST-DECL "bool" |deriv_domain_def| |analysis|)
    (|mvt_gen_le| FORMULA-DECL NIL |prooflite_examples_two| NIL))
   SHOSTAK))
 (|mvt_gen_ge_ci_TCC1| 0
  (|mvt_gen_ge_ci_TCC1-1| NIL 3963962302
   ("" (SKEEP)
    (("" (LEMMA "ci_dd") (("" (INST -1 "d1" "d2") (("" (ASSERT) NIL NIL)) NIL))
      NIL))
    NIL)
   ((|ci_dd| FORMULA-DECL NIL |prooflite_examples_two| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL))
   NIL
   (|mvt_gen_ge_ci| ASSUMING
    "analysis@derivatives[(prooflite_examples_two.ci(prooflite_examples_two.d1, prooflite_examples_two.d2))].derivatives"
    "deriv_domain: ASSUMPTION deriv_domain_def[T].deriv_domain?"
    (187 15 187 38))))
 (|mvt_gen_ge_ci_TCC2| 0
  (|mvt_gen_ge_ci_TCC2-1| NIL 3963962302
   ("" (SKEEP)
    (("" (LEMMA "ci_noe")
      (("" (INST -1 "d1" "d2") (("" (ASSERT) NIL NIL)) NIL)) NIL))
    NIL)
   ((|ci_noe| FORMULA-DECL NIL |prooflite_examples_two| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL))
   NIL
   (|mvt_gen_ge_ci| ASSUMING
    "analysis@derivatives[(prooflite_examples_two.ci(prooflite_examples_two.d1, prooflite_examples_two.d2))].derivatives"
    "not_one_element: ASSUMPTION deriv_domain_def[T].not_one_element?"
    (187 15 187 38))))
 (|mvt_gen_ge_ci| 0
  (|mvt_gen_ge_ci-1| NIL 3963962537
   ("" (LEMMA "mvt_gen_ge")
    (("" (SKEEP)
      (("" (INST -1 "f" "ci(d1,d2)" "c" "a" "b")
        (("1" (ASSERT) NIL NIL)
         ("2" (LEMMA "ci_noe")
          (("2" (LEMMA " ci_connected")
            (("2" (INST -1 "d1" "d2")
              (("2" (INST -2 "d1" "d2") (("2" (ASSERT) NIL NIL)) NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|ci_noe| FORMULA-DECL NIL |prooflite_examples_two| NIL)
    (|ci_connected| FORMULA-DECL NIL |prooflite_examples_two| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|ci| CONST-DECL "bool" |prooflite_examples_two| NIL)
    (|d1| SKOLEM-CONST-DECL "real" |prooflite_examples_two| NIL)
    (|d2| SKOLEM-CONST-DECL "real" |prooflite_examples_two| NIL)
    (|connected?| CONST-DECL "bool" |deriv_domain_def| |analysis|)
    (|not_one_element?| CONST-DECL "bool" |deriv_domain_def| |analysis|)
    (|mvt_gen_ge| FORMULA-DECL NIL |prooflite_examples_two| NIL))
   SHOSTAK))
 (|mvt_gen_le_ci| 0
  (|mvt_gen_le_ci-1| NIL 3963962537
   ("" (LEMMA "mvt_gen_le")
    (("" (SKEEP)
      (("" (INST -1 "f" "ci(d1,d2)" "c" "a" "b")
        (("1" (ASSERT) NIL NIL)
         ("2" (LEMMA "ci_noe")
          (("2" (LEMMA " ci_connected")
            (("2" (INST -1 "d1" "d2")
              (("2" (INST -2 "d1" "d2") (("2" (ASSERT) NIL NIL)) NIL)) NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|ci_noe| FORMULA-DECL NIL |prooflite_examples_two| NIL)
    (|ci_connected| FORMULA-DECL NIL |prooflite_examples_two| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|ci| CONST-DECL "bool" |prooflite_examples_two| NIL)
    (|d1| SKOLEM-CONST-DECL "real" |prooflite_examples_two| NIL)
    (|d2| SKOLEM-CONST-DECL "real" |prooflite_examples_two| NIL)
    (|connected?| CONST-DECL "bool" |deriv_domain_def| |analysis|)
    (|not_one_element?| CONST-DECL "bool" |deriv_domain_def| |analysis|)
    (|mvt_gen_le| FORMULA-DECL NIL |prooflite_examples_two| NIL))
   SHOSTAK))
 (|le_lo_case_0_TCC1| 0
  (|le_lo_case_0_TCC1-1| NIL 3963962302
   ("" (EXPAND "right_open")
    (("" (EXPAND "ci")
      (("" (EXPAND "left_open")
        (("" (EXPAND "f") (("" (ASSERT) (("" (GRIND) NIL))))))))))
    NIL)
   ((|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL
   (|le_lo_case_0| DISJOINTNESS
    "COND reals.<=(prooflite_examples_two.x, 0) -> prooflite_examples_two.g(prooflite_examples_two.x), reals.>(prooflite_examples_two.x, 0) -> prooflite_examples_two.g(0) ENDCOND"
    "NIL" (217 8 220 15))))
 (|le_lo_case_0_TCC2| 0
  (|le_lo_case_0_TCC2-1| NIL 3963962302
   ("" (EXPAND "right_open")
    (("" (EXPAND "ci")
      (("" (EXPAND "left_open")
        (("" (EXPAND "f") (("" (ASSERT) (("" (GRIND) NIL))))))))))
    NIL)
   ((|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL
   (|le_lo_case_0| COVERAGE
    "COND reals.<=(prooflite_examples_two.x, 0) -> prooflite_examples_two.g(prooflite_examples_two.x), reals.>(prooflite_examples_two.x, 0) -> prooflite_examples_two.g(0) ENDCOND"
    "NIL" (217 8 220 15))))
 (|le_lo_case_0_TCC3| 0
  (|le_lo_case_0_TCC3-1| NIL 3963962302
   ("" (SKEEP) (("" (LEMMA "left_open_dd") (("" (INST -1 "0") NIL NIL)) NIL))
    NIL)
   ((|left_open_dd| FORMULA-DECL NIL |prooflite_examples_two| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL))
   NIL
   (|le_lo_case_0| ASSUMING
    "analysis@derivatives[(prooflite_examples_two.left_open(0))].derivatives"
    "deriv_domain: ASSUMPTION deriv_domain_def[T].deriv_domain?"
    (222 4 222 30))))
 (|le_lo_case_0_TCC4| 0
  (|le_lo_case_0_TCC4-1| NIL 3963962302
   ("" (SKEEP) (("" (LEMMA "left_open_noe") (("" (INST -1 "0") NIL NIL)) NIL))
    NIL)
   ((|left_open_noe| FORMULA-DECL NIL |prooflite_examples_two| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL))
   NIL
   (|le_lo_case_0| ASSUMING
    "analysis@derivatives[(prooflite_examples_two.left_open(0))].derivatives"
    "not_one_element: ASSUMPTION deriv_domain_def[T].not_one_element?"
    (222 4 222 30))))
 (|le_lo_case_0| 0
  (|le_lo_case_0-1| NIL 3963962302
   ("" (SKEEP*)
    (("" (SKOLETIN*)
      (("" (FLATTEN)
        (("" (SKEEP)
          (("" (CASE "xo + 2 <= 0")
            (("1" (LEMMA "mvt_gen_le_lo")
              (("1" (INST -1 "f" "0" "0" "xo + 2" "x")
                (("1" (SPLIT -1)
                  (("1" (ASSERT)
                    (("1" (LEMMA "mvt_gen_le_lo")
                      (("1" (INST -1 "f" "0" "0" "x" "xo - 2")
                        (("1" (ASSERT) NIL NIL)
                         ("2" (EXPAND "left_open") (("2" (ASSERT) NIL NIL))
                          NIL)
                         ("3" (EXPAND "left_open") (("3" (ASSERT) NIL NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (PROPAX) NIL NIL) ("3" (PROPAX) NIL NIL)
                   ("4" (PROPAX) NIL NIL))
                  NIL)
                 ("2" (EXPAND "left_open") (("2" (ASSERT) NIL NIL)) NIL)
                 ("3" (EXPAND "left_open") (("3" (ASSERT) NIL NIL)) NIL))
                NIL))
              NIL)
             ("2" (LEMMA "mvt_gen_le_lo")
              (("2" (INST -1 "f" "0" "0" "0" "x")
                (("1" (SPLIT -1)
                  (("1" (ASSERT)
                    (("1" (LEMMA "mvt_gen_le_lo")
                      (("1" (INST -1 "f" "0" "0" "x" "xo - 2")
                        (("1" (EXPAND "f")
                          (("1" (SPLIT -1)
                            (("1" (ASSERT) NIL NIL) ("2" (PROPAX) NIL NIL))
                            NIL))
                          NIL)
                         ("2" (EXPAND "f")
                          (("2" (EXPAND "left_open") (("2" (ASSERT) NIL NIL))
                            NIL))
                          NIL)
                         ("3" (EXPAND "f")
                          (("3" (EXPAND "left_open") (("3" (ASSERT) NIL NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (PROPAX) NIL NIL) ("3" (ASSERT) NIL NIL)
                   ("4" (PROPAX) NIL NIL))
                  NIL)
                 ("2" (EXPAND "f")
                  (("2" (EXPAND "left_open") (("2" (ASSERT) NIL NIL)) NIL))
                  NIL)
                 ("3" (EXPAND "f")
                  (("3" (EXPAND "left_open") (("3" (ASSERT) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|deriv_fun| TYPE-EQ-DECL NIL |derivatives| |analysis|)
    (|deriv| CONST-DECL "[T -> real]" |derivatives| |analysis|)
    (>= CONST-DECL "bool" |reals| NIL)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (IF CONST-DECL
        "[boolean, T, T -> T]"
        |if_def|
        NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|left_open| CONST-DECL "bool" |prooflite_examples_two| NIL)
    (|deriv_domain?| CONST-DECL "bool" |deriv_domain_def| |analysis|)
    (|not_one_element?| CONST-DECL "bool" |deriv_domain_def| |analysis|)
    (|derivable?| CONST-DECL "bool" |derivatives| |analysis|)
    (|restrict| CONST-DECL "R" |restrict| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (|f| SKOLEM-CONST-DECL "[real -> real]" |prooflite_examples_two| NIL)
    (|mvt_gen_le_lo| FORMULA-DECL NIL |prooflite_examples_two| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL)
    (|x| SKOLEM-CONST-DECL "real" |prooflite_examples_two| NIL)
    (|xo| SKOLEM-CONST-DECL "real" |prooflite_examples_two| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL))
   SHOSTAK))
 (|ge_ci_case_1_TCC1| 0
  (|ge_ci_case_1_TCC1-1| NIL 3963963759
   ("" (EXPAND "right_open")
    (("" (EXPAND "ci")
      (("" (EXPAND "left_open")
        (("" (EXPAND "f") (("" (ASSERT) (("" (GRIND) NIL))))))))))
    NIL)
   ((|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL
   (|ge_ci_case_1| DISJOINTNESS
    "COND reals.<(prooflite_examples_two.x, 0) -> prooflite_examples_two.g(0), booleans.AND(reals.>=(prooflite_examples_two.x, 0), reals.<=(prooflite_examples_two.x, 4)) -> prooflite_examples_two.g(prooflite_examples_two.x), reals.>(prooflite_examples_two.x, 4) -> prooflite_examples_two.g(4) ENDCOND"
    "NIL" (271 8 275 15))))
 (|ge_ci_case_1_TCC2| 0
  (|ge_ci_case_1_TCC2-1| NIL 3963963759
   ("" (EXPAND "right_open")
    (("" (EXPAND "ci")
      (("" (EXPAND "left_open")
        (("" (EXPAND "f") (("" (ASSERT) (("" (GRIND) NIL))))))))))
    NIL)
   ((|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL
   (|ge_ci_case_1| COVERAGE
    "COND reals.<(prooflite_examples_two.x, 0) -> prooflite_examples_two.g(0), booleans.AND(reals.>=(prooflite_examples_two.x, 0), reals.<=(prooflite_examples_two.x, 4)) -> prooflite_examples_two.g(prooflite_examples_two.x), reals.>(prooflite_examples_two.x, 4) -> prooflite_examples_two.g(4) ENDCOND"
    "NIL" (271 8 275 15))))
 (|ge_ci_case_1_TCC3| 0
  (|ge_ci_case_1_TCC3-1| NIL 3963963759
   ("" (SKEEP)
    (("" (LEMMA "ci_dd") (("" (INST -1 "0" "4") (("" (ASSERT) NIL NIL)) NIL))
      NIL))
    NIL)
   ((|ci_dd| FORMULA-DECL NIL |prooflite_examples_two| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL))
   NIL
   (|ge_ci_case_1| ASSUMING
    "analysis@derivatives[(prooflite_examples_two.ci(0, 4))].derivatives"
    "deriv_domain: ASSUMPTION deriv_domain_def[T].deriv_domain?"
    (277 4 277 26))))
 (|ge_ci_case_1_TCC4| 0
  (|ge_ci_case_1_TCC4-1| NIL 3963963759
   ("" (SKEEP)
    (("" (LEMMA "ci_noe") (("" (INST -1 "0" "4") (("" (ASSERT) NIL NIL)) NIL))
      NIL))
    NIL)
   ((|ci_noe| FORMULA-DECL NIL |prooflite_examples_two| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL))
   NIL
   (|ge_ci_case_1| ASSUMING
    "analysis@derivatives[(prooflite_examples_two.ci(0, 4))].derivatives"
    "not_one_element: ASSUMPTION deriv_domain_def[T].not_one_element?"
    (277 4 277 26))))
 (|ge_ci_case_1| 0
  (|ge_ci_case_1-1| NIL 3963963760
   ("" (SKEEP*)
    (("" (SKOLETIN*)
      (("" (FLATTEN)
        (("" (SKEEP)
          (("" (CASE "xo - 2 >= 0 AND xo + 2 <= 4")
            (("1" (FLATTEN)
              (("1" (LEMMA "mvt_gen_ge_ci")
                (("1" (INST -1 "f" "0" "4" "0" "xo + 2" "x")
                  (("1" (SPLIT -1)
                    (("1" (ASSERT)
                      (("1" (LEMMA "mvt_gen_ge_ci")
                        (("1" (INST -1 "f" "0" "4" "0" "x" "xo - 2")
                          (("1" (ASSERT) NIL NIL)
                           ("2" (EXPAND "ci") (("2" (PROPAX) NIL NIL)) NIL)
                           ("3" (ASSERT)
                            (("3" (EXPAND "ci") (("3" (PROPAX) NIL NIL)) NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL)
                     ("2" (ASSERT) NIL NIL) ("3" (PROPAX) NIL NIL)
                     ("4" (PROPAX) NIL NIL) ("5" (PROPAX) NIL NIL))
                    NIL)
                   ("2" (EXPAND "ci") (("2" (ASSERT) NIL NIL)) NIL)
                   ("3" (EXPAND "ci") (("3" (ASSERT) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL)
             ("2" (CASE "xo - 2 < 0 AND xo + 2 <= 4")
              (("1" (FLATTEN)
                (("1" (LEMMA "mvt_gen_ge_ci")
                  (("1" (INST -1 "f" "0" "4" "0" "xo + 2" "x")
                    (("1" (SPLIT -1)
                      (("1" (ASSERT)
                        (("1" (LEMMA "mvt_gen_ge_ci")
                          (("1" (INST -1 "f" "0" "4" "0" "x" "0")
                            (("1" (EXPAND "f") (("1" (ASSERT) NIL NIL)) NIL)
                             ("2" (EXPAND "ci") (("2" (PROPAX) NIL NIL)) NIL)
                             ("3" (ASSERT)
                              (("3" (EXPAND "ci") (("3" (PROPAX) NIL NIL))
                                NIL))
                              NIL))
                            NIL))
                          NIL))
                        NIL)
                       ("2" (ASSERT) NIL NIL) ("3" (PROPAX) NIL NIL)
                       ("4" (PROPAX) NIL NIL) ("5" (PROPAX) NIL NIL))
                      NIL)
                     ("2" (EXPAND "ci") (("2" (ASSERT) NIL NIL)) NIL)
                     ("3" (EXPAND "ci") (("3" (ASSERT) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL)
               ("2" (ASSERT)
                (("2" (CASE "xo - 2 >= 0 AND xo + 2 > 4")
                  (("1" (FLATTEN)
                    (("1" (LEMMA "mvt_gen_ge_ci")
                      (("1" (INST -1 "f" "0" "4" "0" "4" "x")
                        (("1" (SPLIT -1)
                          (("1" (LEMMA "mvt_gen_ge_ci")
                            (("1" (INST -1 "f" "0" "4" "0" "x" "xo - 2")
                              (("1" (SPLIT -1)
                                (("1" (ASSERT)
                                  (("1" (EXPAND "f") (("1" (ASSERT) NIL NIL))
                                    NIL))
                                  NIL)
                                 ("2" (ASSERT) NIL NIL) ("3" (PROPAX) NIL NIL)
                                 ("4" (ASSERT) NIL NIL) ("5" (PROPAX) NIL NIL))
                                NIL)
                               ("2" (EXPAND "ci") (("2" (ASSERT) NIL NIL)) NIL)
                               ("3" (EXPAND "ci") (("3" (PROPAX) NIL NIL))
                                NIL))
                              NIL))
                            NIL)
                           ("2" (ASSERT) NIL NIL) ("3" (PROPAX) NIL NIL)
                           ("4" (ASSERT) NIL NIL) ("5" (PROPAX) NIL NIL))
                          NIL)
                         ("2" (EXPAND "ci") (("2" (PROPAX) NIL NIL)) NIL)
                         ("3" (ASSERT)
                          (("3" (EXPAND "ci") (("3" (PROPAX) NIL NIL)) NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (ASSERT)
                    (("2" (CASE "xo - 2 < 0 AND xo + 2 > 4")
                      (("1" (GRIND) NIL NIL) ("2" (GRIND) NIL NIL)) NIL))
                    NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (|deriv_fun| TYPE-EQ-DECL NIL |derivatives| |analysis|)
    (|deriv| CONST-DECL "[T -> real]" |derivatives| |analysis|)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (< CONST-DECL "bool" |reals| NIL) (>= CONST-DECL "bool" |reals| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (IF CONST-DECL
        "[boolean, T, T -> T]"
        |if_def|
        NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|ci| CONST-DECL "bool" |prooflite_examples_two| NIL)
    (|deriv_domain?| CONST-DECL "bool" |deriv_domain_def| |analysis|)
    (|not_one_element?| CONST-DECL "bool" |deriv_domain_def| |analysis|)
    (|derivable?| CONST-DECL "bool" |derivatives| |analysis|)
    (|restrict| CONST-DECL "R" |restrict| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (|f| SKOLEM-CONST-DECL "[real -> real]" |prooflite_examples_two| NIL)
    (> CONST-DECL "bool" |reals| NIL)
    (|real_gt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|xo| SKOLEM-CONST-DECL "real" |prooflite_examples_two| NIL)
    (|x| SKOLEM-CONST-DECL "real" |prooflite_examples_two| NIL)
    (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|mvt_gen_ge_ci| FORMULA-DECL NIL |prooflite_examples_two| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL))
   SHOSTAK))
 (|ge_ro_case_2_TCC1| 0
  (|ge_ro_case_2_TCC1-1| NIL 3964004196
   ("" (EXPAND "right_open")
    (("" (EXPAND "ci")
      (("" (EXPAND "left_open")
        (("" (EXPAND "f") (("" (ASSERT) (("" (GRIND) NIL))))))))))
    NIL)
   ((|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL
   (|ge_ro_case_2| DISJOINTNESS
    "COND reals.<(prooflite_examples_two.x, 4) -> prooflite_examples_two.g(4), reals.>=(prooflite_examples_two.x, 4) -> prooflite_examples_two.g(prooflite_examples_two.x) ENDCOND"
    "NIL" (341 8 344 15))))
 (|ge_ro_case_2_TCC2| 0
  (|ge_ro_case_2_TCC2-1| NIL 3964004196
   ("" (EXPAND "right_open")
    (("" (EXPAND "ci")
      (("" (EXPAND "left_open")
        (("" (EXPAND "f") (("" (ASSERT) (("" (GRIND) NIL))))))))))
    NIL)
   ((|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_lt_is_strict_total_order| NAME-JUDGEMENT
     "(strict_total_order?[real])" |real_props| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL))
   NIL
   (|ge_ro_case_2| COVERAGE
    "COND reals.<(prooflite_examples_two.x, 4) -> prooflite_examples_two.g(4), reals.>=(prooflite_examples_two.x, 4) -> prooflite_examples_two.g(prooflite_examples_two.x) ENDCOND"
    "NIL" (341 8 344 15))))
 (|ge_ro_case_2_TCC3| 0
  (|ge_ro_case_2_TCC3-1| NIL 3964004196
   ("" (SKEEP) (("" (LEMMA "right_open_dd") (("" (INST -1 "4") NIL NIL)) NIL))
    NIL)
   ((|right_open_dd| FORMULA-DECL NIL |prooflite_examples_two| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL))
   NIL
   (|ge_ro_case_2| ASSUMING
    "analysis@derivatives[(prooflite_examples_two.right_open(4))].derivatives"
    "deriv_domain: ASSUMPTION deriv_domain_def[T].deriv_domain?"
    (346 4 346 31))))
 (|ge_ro_case_2_TCC4| 0
  (|ge_ro_case_2_TCC4-1| NIL 3964004196
   ("" (SKEEP) (("" (LEMMA "right_open_noe") (("" (INST -1 "4") NIL NIL)) NIL))
    NIL)
   ((|right_open_noe| FORMULA-DECL NIL |prooflite_examples_two| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL))
   NIL
   (|ge_ro_case_2| ASSUMING
    "analysis@derivatives[(prooflite_examples_two.right_open(4))].derivatives"
    "not_one_element: ASSUMPTION deriv_domain_def[T].not_one_element?"
    (346 4 346 31))))
 (|ge_ro_case_2| 0
  (|ge_ro_case_2-1| NIL 3964004197
   ("" (SKEEP*)
    (("" (SKOLETIN*)
      (("" (FLATTEN)
        (("" (SKEEP)
          (("" (CASE "xo - 2 >= 4")
            (("1" (LEMMA "mvt_gen_ge_ro")
              (("1" (INST -1 "f" "4" "0" "xo + 2" "x")
                (("1" (SPLIT -1)
                  (("1" (ASSERT)
                    (("1" (LEMMA "mvt_gen_ge_ro")
                      (("1" (INST -1 "f" "4" "0" "x" "xo - 2")
                        (("1" (ASSERT) NIL NIL)
                         ("2" (EXPAND "right_open") (("2" (ASSERT) NIL NIL))
                          NIL)
                         ("3" (EXPAND "right_open") (("3" (ASSERT) NIL NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (PROPAX) NIL NIL) ("3" (PROPAX) NIL NIL)
                   ("4" (PROPAX) NIL NIL))
                  NIL)
                 ("2" (EXPAND "right_open") (("2" (ASSERT) NIL NIL)) NIL)
                 ("3" (EXPAND "right_open") (("3" (ASSERT) NIL NIL)) NIL))
                NIL))
              NIL)
             ("2" (LEMMA "mvt_gen_ge_ro")
              (("2" (INST -1 "f" "4" "0" "xo + 2" "x")
                (("1" (SPLIT -1)
                  (("1" (ASSERT)
                    (("1" (LEMMA "mvt_gen_ge_ro")
                      (("1" (INST -1 "f" "4" "0" "x" "4")
                        (("1" (EXPAND "f")
                          (("1" (SPLIT -1)
                            (("1" (ASSERT) NIL NIL) ("2" (PROPAX) NIL NIL))
                            NIL))
                          NIL)
                         ("2" (EXPAND "f")
                          (("2" (EXPAND "right_open") (("2" (ASSERT) NIL NIL))
                            NIL))
                          NIL)
                         ("3" (EXPAND "f")
                          (("3" (EXPAND "right_open") (("3" (ASSERT) NIL NIL))
                            NIL))
                          NIL))
                        NIL))
                      NIL))
                    NIL)
                   ("2" (PROPAX) NIL NIL) ("3" (PROPAX) NIL NIL)
                   ("4" (PROPAX) NIL NIL))
                  NIL)
                 ("2" (EXPAND "f")
                  (("2" (EXPAND "right_open") (("2" (ASSERT) NIL NIL)) NIL))
                  NIL)
                 ("3" (EXPAND "f")
                  (("3" (EXPAND "right_open") (("3" (ASSERT) NIL NIL)) NIL))
                  NIL))
                NIL))
              NIL))
            NIL))
          NIL))
        NIL))
      NIL))
    NIL)
   ((|minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|minus_nzint_is_nzint| APPLICATION-JUDGEMENT "nzint" |integers| NIL)
    (>= CONST-DECL "bool" |reals| NIL)
    (|deriv_fun| TYPE-EQ-DECL NIL |derivatives| |analysis|)
    (|deriv| CONST-DECL "[T -> real]" |derivatives| |analysis|)
    (|numfield| NONEMPTY-TYPE-EQ-DECL NIL |number_fields| NIL)
    (+ CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (- CONST-DECL "[numfield -> numfield]" |number_fields| NIL)
    (<= CONST-DECL "bool" |reals| NIL)
    (- CONST-DECL "[numfield, numfield -> numfield]" |number_fields| NIL)
    (OR CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (IFF CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (AND CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (|number| NONEMPTY-TYPE-DECL NIL |numbers| NIL)
    (|number_field_pred| CONST-DECL "[number -> boolean]" |number_fields| NIL)
    (|number_field| NONEMPTY-TYPE-FROM-DECL NIL |number_fields| NIL)
    (|real_pred| CONST-DECL "[number_field -> boolean]" |reals| NIL)
    (|real| NONEMPTY-TYPE-FROM-DECL NIL |reals| NIL)
    (IMPLIES CONST-DECL "[bool, bool -> bool]" |booleans| NIL)
    (= CONST-DECL "[T, T -> boolean]" |equalities| NIL)
    (IF CONST-DECL
        "[boolean, T, T -> T]"
        |if_def|
        NIL)
    (< CONST-DECL "bool" |reals| NIL)
    (NOT CONST-DECL "[bool -> bool]" |booleans| NIL)
    (|right_open| CONST-DECL "bool" |prooflite_examples_two| NIL)
    (|deriv_domain?| CONST-DECL "bool" |deriv_domain_def| |analysis|)
    (|not_one_element?| CONST-DECL "bool" |deriv_domain_def| |analysis|)
    (|derivable?| CONST-DECL "bool" |derivatives| |analysis|)
    (|restrict| CONST-DECL "R" |restrict| NIL)
    (|real_plus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_minus_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|bijective?| CONST-DECL "bool" |functions| NIL)
    (|id| CONST-DECL "(bijective?[T, T])" |identity| NIL)
    (|f| SKOLEM-CONST-DECL "[real -> real]" |prooflite_examples_two| NIL)
    (|mvt_gen_ge_ro| FORMULA-DECL NIL |prooflite_examples_two| NIL)
    (|real_ge_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (|real_times_real_is_real| APPLICATION-JUDGEMENT "real" |reals| NIL)
    (|real_le_is_total_order| NAME-JUDGEMENT "(total_order?[real])"
     |real_props| NIL)
    (NIL APPLICATION-JUDGEMENT "above(n)" |exp2| NIL)
    (|x| SKOLEM-CONST-DECL "real" |prooflite_examples_two| NIL)
    (|xo| SKOLEM-CONST-DECL "real" |prooflite_examples_two| NIL)
    (|boolean| NONEMPTY-TYPE-DECL NIL |booleans| NIL)
    (|bool| NONEMPTY-TYPE-EQ-DECL NIL |booleans| NIL)
    (TRUE CONST-DECL "bool" |booleans| NIL))
   SHOSTAK)))

